[
  {
    "user_input": "Explain why climate data is essential in environmental science.",
    "retrieved_contexts": [
      "[{'id': 1753901956989969, 'score': 0.69450647, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_2', 'type': 'pdf', 'content': ' as well as errors stemming from the analytical procedure itself (e.g.calibration of analysis using synthetic data/models).Learning objectives of the Environmental Data module•Growing/important field –with likely career opportunities•Great playground to deliver learning objectives\\nUsing climate models: quantification/forecasting(impacts, adaptation, mitigation)\\nhttps://www.noaa.gov/education/resource-collections/climate/climate-change-impacts\\nUsing climate models: designscenarios(explore policy,', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 2}}, {'id': 1753903424509295, 'score': 0.66098607, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_1_md', 'type': 'markdown', 'content': \"---\\n\\n# 01- Introduction to climate data and climate models\\n\\n---\\n\\n<a id='Contents'></a>\\n## Contents\\n- [Lectures](#lectures)\\n- [Question](#question)\\n- [ESMValTool](#ESMValTool)\\n- [Sources of climate data](#climatedata)\\n- [CEDA](#CEDA)\\n- [File formats](#fileformat)\\n- [Metadata](#metadata)\\n- [NetCDF](#NetCDF)\\n- [NCO](#NCO)\\n- [Reanalysis products](#reanalysis)\\n- [Climate services UKCP18](#ukcp18)\\n  \\n## Learning outcomes\\n1. Understand the basics of climate modelling\\n2. Know where to find and how to access climate data (ESGF, CEDA)\\n3. Understand common file formats\\n4. Understand the importance of metadata and understand CF conventions\\n5. Understand the NetCDF file format and know how to read, create and maniputate NetCDF data\\n6. Become familiar with other key tools used to manipulate netCDF data (NCO, CDO)\\n7. Know how to access ERA5 reanalysis products\\n8. Climate Services and UKCP18 and ability to access that data\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 1}}, {'id': 1753903424357433, 'score': 0.65821326, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_5_md', 'type': 'markdown', 'content': \"<a id='climatedata'></a>\\n\\n# Working with climate data and climate models\\n\\n### Earth System Grid Federation (ESGF)\\n\\n![esgf](img/ESGF_logo.png)\\n\\n\\n[ESGF](https://esgf.llnl.gov) is an open-source platform that provides distributed access to peta/exa-scale scientific data, **globally**. \\n\\nIt is an interagency and international effort led by the US Department of Energy (DOE), co-funded by National Aeronautics and Space Administration (NASA), National Oceanic and Atmospheric Administration (NOAA), the US National Science Foundation (NSF), and other international partners, such as the Max Planck Institute for Meteorology (MPI-M) German Climate Computing Centre (DKRZ), the Australian National University (ANU) National Computational Infrastructure (NCI), Institut Pierre-Simon Laplace (IPSL), and the **Centre for Environmental Data Analysis ([CEDA](https://www.ceda.ac.uk))** in the UK.\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 5}}, {'id': 1753901957112878, 'score': 0.6529466, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_0', 'type': 'pdf', 'content': 'https://svs.gsfc.nasa.gov/30701Climate data and modelsEDSML MSc –Imperial College London –Environmental dataYves Plancherel-https://www.linkedin.com/in/yves-plancherel/\\nWhy discuss climate data and climate models?\\n1. Understand common data format and databasestructures specific to representative fields of environmental science2. Demonstrate technical competency in handling common data types routinely encountered in the environmental sciences and identify relevant open-source data repositories3. ', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 0}}, {'id': 1753903424368210, 'score': 0.65062827, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_2_md', 'type': 'markdown', 'content': \"<a id='lectures'></a>\\n# Lecture on relevance of climate science, climate models and climate modelling\\n\\n\\n(see Powerpoint presentations)\\n\\n1. 01v1_Why_climate_data.pptx/pdf\\n2. 02v1_Building_climate_models.pptx/pdf\\n3. 03v1_Common_issues.pptx/pdf\\n   \\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 2}}, {'id': 1753903424143550, 'score': 0.64838266, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_11_md', 'type': 'markdown', 'content': \"<a id='NetCDF'></a>\\n\\n## Network Common Data Form (NetCDF)\\n\\n[NetCDF](https://www.unidata.ucar.edu/software/netcdf/) is one of the most common data format used to store climate data. NetCDF files allow the user to insert metadata in the data file by design, ensuring the data file is self-describing (amongst other properties).\\n\\n*NetCDF is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data.* \\n\\nThe netCDF format, which is a type of HDF format, is attractive because it is:\\n\\n* Self-Describing. A netCDF file includes information about the data it contains and metadata.\\n* Portable. A netCDF file can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.\\n* Scalable. Small subsets of large datasets in various formats may be accessed efficiently through netCDF interfaces, even from remote servers.\\n* Appendable. Data may be appended to a properly structured netCDF file without copying the dataset or redefining its structure.\\n* Sharable. One writer and multiple readers may simultaneously access the same netCDF file.\\n* Archivable. Access to all earlier forms of netCDF data will be supported by current and future versions of the software.\\n\\n\\nThe NetCDF project is maintained by the Unidata program at the University Corporation for Atmospheric Research ([UCAR](https://www.ucar.edu)). [UCAR](https://www.ucar.edu) also manages [NCAR](https://ncar.ucar.edu), one of the first center to have developped climate models and is today one of the gold-standard on the topic. \\n\\nNCAR also developed [NCL](https://www.ncl.ucar.edu), an interpreted programming language designed specifically for scientific data analysis and visualization (we will not use NCL here, but the python package `ESMValTool` has build-in support for it). \\n\\n[NCAR](https://ncar.ucar.edu) has also developped the [climate data guide](https://climatedataguide.ucar.edu), a tool to search and access >200 data sets specific to the ocean, land and the atmosphere. (Some of these data may or may not also be found on CEDA.) \\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 11}}, {'id': 1753903424142956, 'score': 0.64755386, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_4_md', 'type': 'markdown', 'content': \"<a id='ESMValTool'></a>\\n\\n# Python environments to consider for working with climate data \\n\\n* ## Earth System Model Evaluation Tool (ESMValTool)\\n![esmvaltool](img/ESMValTool-logo-2.png)\\n\\nThis week, it should be possible to simply install packages as needed...\\n\\nHowever, if you anticipate possible future needs, you may want to invest a bit of effort to setup a specific python environment to work with climate data. If so, a good place to start is the `ESMValTool` project. \\n\\n\\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) is  a community-led, open source, set of software tools (build on python 3) developed to improve diagnosing and understanding climate models. While the focus has been on climate models, not observations, one cannot quantify model biases without also comparing the model results with observations. [ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) therefore also has some capability to analyze and manipulate large datasets. \\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) can work offline, but as the amount of climate data is so large, it is mostly designed to work with data centers that provide local access to the vast amount of data. One such initiative is the Earth System Grid Federation ([ESGF](https://esgf.llnl.gov)). ESMValTool provides functionality to work on HPC systems.\\n\\nWe will not use ESMValTool here specifically, but it will install other convenient tools and you may be curious to investigate ESMValTool capabilities on your own anyways. It is now used routinely for climate modelling research. \\n\\nAdditional information and help can be found at https://www.esmvaltoolorg, and on the [ESMValGroup](https://github.com/ESMValGroup) github page. The [ESMValTool tutorial](https://esmvalgroup.github.io/ESMValTool_Tutorial/) is a great resource to get started. \\n\\n\\n### OPTIONAL: Installing ESMValTool (NB: this often fails for students - installing this is not required for the course)\\n[Installation instructions](https://docs.esmvaltool.org/en/latest/quickstart/installation.html) differ by operating system and it is very much an experimental, in development, tool - keep this in mind! \\n\\n[Notes:ESMValTool 2.0 requires a Unix(-like) operating system and Python 3.7+. (Python 3.7, 3.8 and 3.9 are supported). On my laptop (Macbook pro 13'' M1 2020 with OS Monterey 12.0.1), I installed it in Nov 2021 with Python 3.9.7. ...but I installed it when 'conda' was still an installation option. ESMValTool developer have  changed installation methods to `mamba` recently. Do refer to online/official instructions). You will now be required to also [install `mamba`](https://docs.esmvaltool.org/en/latest/quickstart/installation.html#mamba-installation) first (...yet another package/dependency manager).] \\n\\nESMValTool can also work with Julia, R, NCL. Do check installation instructions for these extensions. \\n\\n[back to contents](##Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 4}}, {'id': 1753902702944729, 'score': 0.64750135, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_9', 'type': 'pdf', 'content': 'task. It requires understanding the model well and the data well–A trend towards “Observational System Simulation Experiments” (OSSE)–data assimilation (e.g.4DVAR)\\nThe role of observationsin modeling\\nhttp://www.climate.be/textbook/pdf/Chapter_3.pdf\\nModelsvs observations•There are data that are ’just’ observations•There are models that are ‘just’ models•There are models that are ‘assimilated with data’–Often called ‘Reanalysis Products’•(also used in weather forecasting, obviously)–These are mode', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 9}}, {'id': 1753901956781118, 'score': 0.6446448, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_5', 'type': 'pdf', 'content': 'umans•Infrastructures•Agriculture•Biodiversity•Landscape•GDP•Administration•Policy•…\\nThe business (and opportunities) of climate\\nhttps://www.metoffice.gov.uk\\nhttps://cervest.earth\\nhttps://www.spglobal.com/marketintelligence/en/campaigns/esg-analysis\\nhttps://www.ukclimaterisk.org\\nhttps://www.ibm.com/uk-en/products/environmental-intelligence-suitehttps://www.rms.com/climate-change\\nBusiness riskand climate analyticshttps://www.nature.com/articles/s41558-020-00984-6… an emerging field! Get involved ', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 5}}, {'id': 1753901956917450, 'score': 0.6391976, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_3', 'type': 'pdf', 'content': ' technology options)\\n\\nUsing climate models: variability(temporal, spatial)\\nImportance of experimental design!Control+ experiment\\nUsing climate models: uncertainties and sensitivities\\nMIP = Model Intercomparison Project\\nEyring et al. 2016\\nUsing climate models: uncertainties and sensitivities\\nhttps://en.wikipedia.org/wiki/Climate_ensembleDifferent experimentswith many ensembles!Each one trying to account for sensitivity due to a source of error Real world data: we only have one Earth, ONE realizat', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 3}}, {'id': 1753903424104630, 'score': 0.63495356, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_0_md', 'type': 'markdown', 'content': '---\\n\\n# <center> Environmental Data </center>\\n\\n---\\n\\n## Course objectives and philosophy\\nLet\\'s start by recalling what the learning objective of the Environmental Data modules are:\\n\\n1. Understand common data format and database structures specific to representative fields of environmental science\\n2. Demonstrate technical competency in handling common data types routinely encountered in the environmental sciences and identify relevant open-source data repositories\\n3. Identify and design suitable data analysis strategies that consider data types, data distribution constraints, strength, benefits and limitations of statistical and modelling tools and environmental dynamics.\\n4. Understand the limitation of available data and data analysis products. Understand sources of errors and demonstrate ability to comprehensively characterize uncertainties and interpret results in the context of these uncertainties, including measurement errors, environmental uncertainties as well as errors stemming from the analytical procedure itself (e.g. calibration of analysis using synthetic data/models).\\n\\nYou\\'ll note that these objectives address a progression of skills. The first focus on technical competency (understanding common data format and an ability to manipulate these data). The last two go deeper than technical competency - these aim to develop a data analysis workflow. In real-life situations, some of that workflow will be informed by intuition, and the best workflow will depend on context (e.g. time, infrastructure available) and on the objectives of a study. \\n\\nIntuition will come with experience, and therefore, also from failure! This course is an opportunity to try, sometimes fail ... and therefore learn! (That is the luxury of being a student!) With that in mind, some of the coursework presented here will be purposefully \"vague\". This is not meant to be annoying, it is designed to push you to seek and explore possible solutions (solutions are rarely unique) and express your creativity as an analyst. \\n\\n**Important**: Data analysis is a key component of the scientific method and therefore cannot exist without `hypothesis testing`. Approach every part of the data analysis workflow as a test, an experiment. Each experiment should be motivated by a hypothesis (a goal), will involve applying a methodology, will produce results pertinent to the hypothesis/goal, and will require a critique of these results with regards to their ability to address the hypothesis/goal before drawing a conclusion (it is ok for conclusions to come with caveats and uncertainties if the analysis warrants limits of interpretation).  \\n\\n**Warning**: Data analysis can also be a bit of  \"rabbit hole\"! There will always be nicer, cooler, better things to do. Sometimes, good is good enough though. Whatever you do, never lose sight of the overall objectives of a study. This needs to be delivered in priority.\\n\\n## This segment of the module\\nIn this module, content will be delivered using a mixture of\\npowerpoint lectures, jupyter notebooks and practical exercises.\\n\\nWarning: other directories, containing figures, images, animations or data are also provided. \\nHowever, cliamte data can be very large, and github has a low limit for these. \\nA dropbox link with data also exist: https://www.dropbox.com/sh/fxcmtbz4o3tacz1/AABjQbeyg27zDh1chZxRDFcpa?dl=0\\n\\n### Github repository: `environmental_data_week1`\\n\\n\\n## We will focus and use climate data.\\nThis segment of the module will focus on 2D, 3D and 4D data. To illustrate techniques and learn some useful skills, we will use data around the theme of climate and climate change. As part of this, we will learn how to access and use climate data and output from global climate models. \\n\\nThe science of climate is beyond the scope of this course, but although we will focus on data analysis, it is my hope that you will develop an appreciation and better understanding of climate science in the process. \\n___', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 0}}, {'id': 1753903424959234, 'score': 0.63339627, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_9_md', 'type': 'markdown', 'content': '<a id=\\'Metadata\\'></a>\\n\\n## The importance of Metadata\\n[Metadata](https://help.ceda.ac.uk/article/4428-metadata-basics) **relate to all the information necessary to interpret, understand and use a given dataset. Metadata are not the data themselves, but are required to provide context and therefore inform the data analysis.** \\n\\nThere are two types of metadata, \"**discover metadata**\", which can be used to locate the dataset in a search, and \"**detailed metadata**\", which contain the information necessary to use the data (ideally) without having to ask the data provider for more information (even if one of the key piece of information should be the data provider information and contact detail!).\\n\\nThere is no upper limit as to what information should be included in the metadata, but typical metadata comprise information about when and where the observations, or the file, where produced, how they were produced (which instrument, technique, algorithm were used), information about the experiment the data come from, maybe some information about data accuracy (if not provided as seperate data in the file), information about who produced the data or the file, including contact information, or appropriate reference(s), and, if relevant, additional information about the research context, i.e. which project is associated with these data (this could help the user understand if more data from this group/project exist or can be expected). If the data represent a subset of a larger dataset, this should also be mentioned. \\n\\nAnother key pieces of information that the metadata should provide are a description of the variables in the file, with variable **names**, and the **units** of these variables. \\n\\nIf the data in the file represent a processed version of other raw data, then one should add information about these raw data as well, their provenance, references, and the transformation that was made, etc. One should be able to track the chain of information all the way to the orginal observations (or model output). \\n\\nIf the data represent gridded variables, then the nature of the grid on which these data are defined should also be explained. \\n\\nSimilarly, if the position, or some other features of the data, depend on a reference system, that reference system should be given. This will be discussed in more depth during the introduction to geostatistics lecture. \\n\\nIn the case of climate models (or other models, if relevant), the metadata should also include information about the model itself, the model name, version, the length of the integration, maybe a brief description of the spin-up, boundary conditions, initial conditions used to produce the simulation. \\n\\nObviously the information that will be included in the metadata vary substantially. You should learn (and will discover - mostly through shear frustration when key information is missing!) what constitute useful metadata in your field of work. \\n\\nMetadata can be included in the file itself (if the file format allows it), as separate files, or in the form of some other documents. When sourcing data, always make a note of where the data come from. This is especially true if getting data online as it is very easy to download data and then forget where they come from. Detailed note-taking is part of the job of the data analyst (and that of any scientist!). \\n\\nWhen metadata is included in the file directly, this typically comes as a header, or in a specified location in the file. The netCDF format has rules for how/where to include metadata, which is one of the reason why netCDF data are particularly useful and popular in climate science. \\n\\n\\n[back to contents](#Contents)\\n\\n---', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 9}}, {'id': 1753902702794239, 'score': 0.63328826, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_8', 'type': 'pdf', 'content': 'cool and warm the climateThe microphysics responsible for cloud formation is not well understoodThe grid cells in models are much much bigger than time/space scales relevant for cloud physicsÞMagnitude/location of rain events is hard to predict wellÞThat information is useful though!\\nComparing models with data•What is a data point? Observation vs model result•Are model solutions at a point similar toa data point (i.e.observational sample)?–Spatially?–Temporally?•Using data well is not a trivial ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 8}}, {'id': 1753903424815332, 'score': 0.62783456, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_6_md', 'type': 'markdown', 'content': '<a id=\\'CEDA\\'></a>\\n\\n### For the UK: Center for Environmental Data Analysis (CEDA)\\n\\n![ceda](img/ceda_archive_logo_transp_white_3_h80.png)\\n\\n[CEDA](https://www.ceda.ac.uk) serves the UK environmental science community. It is a component of ESGF. \\n\\nCEDA has two main branches: \\n1. [CEDA-Archive: https://archive.ceda.ac.uk](https://archive.ceda.ac.uk) \\n2. [JASMIN: https://jasmin.ac.uk](https://jasmin.ac.uk)\\n\\n[CEDA-Archive](https://archive.ceda.ac.uk) serves as the national (UK) data centre for atmospheric and earth observation research. It currently holds >18 Petabytes of atmospheric and earth observation data from a variet of sources, such as aircraft campaigns, satellites imagery, automatic weather stations, climate models, etc. \\n\\nCEDA is one of 5 UK data centers, comprising the Environmental Data Service ([EDS](https://nerc.ukri.org/research/sites/environmental-data-service-eds/)), supported by the UK Research and Innovation\\'s National Environmental Research Council (NERC). The 5 centers are \\n1. British Oceanographic Data Centre (Marine), \\n2. CEDA (Atmospheric, Earth Observation, and Solar and space physics), \\n3. Environmental Information Data Centre (Terrestrial and freshwater), \\n4. National Geoscience Data Centre (Geoscience), and \\n5. Polar Data Centre (Polar and cryosphere). \\n   \\nAs the focus is on climate here, CEDA is the most relevant, but it is useful to know of these resources if you end up working in other fields. \\n\\nCEDA also serves as the Data Distribution Center ([DDC](https://www.ipcc-data.org)) for the Intergovernmental Panel on Climate Change ([IPCC](https://www.ipcc.ch)).\\n\\n[JASMIN](https://jasmin.ac.uk) is a data intensive supercomputer for environmental science. It currently supports over 160 projects ranging from climate science and oceanography to air pollution, earthquake deformation or biodiversity studies. JASMIN consists of multi-Petabyte fast storage, co-located with data analysis computing facilities. This would be the \"go-to\" tool for processing large amounts of climate data, which are directly linked to the system (through CEDA). We will here work offline (using local storage), but JASMIN and CEDA are useful resources for anyone working in environmental science in the UK (most nations don\\'t have these facilities - they are rare and valuable!). \\n\\nSince CEDA and JASMIN are linked, the **compute power is linked to the data**, making for an efficient environment for data analysis. \\n\\n#### Getting access\\n\\nObviously, maintaining these facilities has a cost and therefore not all users will have the same access priviledges. Members of educational, academic and research institutions in the UK can often access these infrastructures for free (pending one can demonstrate need and subject to a fair-use policy). Use and access will likely not be free for commercial applications.  \\n\\n**Use your Imperial College London email adresses (or from another UK institution) to register!**\\n\\nIn order to use the CEDA-Archive, it is necessary to first [register for an account](https://services.ceda.ac.uk/cedasite/register/info/). This is generally quick, easy and free.\\n\\nSimilarly, access to JASMIN requires an account, but this involves a more complex multi-step process. First, one must ask for a [JASMIN portal account](https://help.jasmin.ac.uk/article/4435-get-a-jasmin-account). If granted, one can then register for a [jasmin-login account] (https://help.jasmin.ac.uk/article/161-get-login-account). The type of account given will depend on need and priviledges requested. Users granted jasmin-login access get a HOME directory of 100GB of storage and can access the shared JASMIN servers (Scientific servers, data transfer servers, and the LOTUS HPC cluster).\\n   \\n[back to contents](#Contents)\\n\\n---', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 6}}, {'id': 1753903424623019, 'score': 0.62597215, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_37_md', 'type': 'markdown', 'content': \"### Climate Data Operators (CDO)\\nThe Climate Data Operators ([CDO](https://code.mpimet.mpg.de/projects/cdo)) software is a collection of >600 operators for standard processing of climate and forecast model data. They are slighly less memory/speed efficient than NCO, but they do more (>600 vs 12!). CDO support the main data formats used in the field, such as GRIB and netCDF. \\n\\nThey too can be daisy-chained for specific applications. There are [many recipes available](https://code.mpimet.mpg.de/projects/cdo/embedded/cdo_eca.pdf) to calculate various climate indices and diagnostics, what makes them very attractive to evaluate gridded climate data or climate model output.\\n\\nThe [CDO user guide](https://code.mpimet.mpg.de/projects/cdo/embedded/index.html) provides details instructions and examples. \\n\\n[They are also very useful, but we don't have time to discuss them in detail here. You are encouraged to practice with CDO on your own time]\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 37}}, {'id': 1753902702922525, 'score': 0.62559056, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_0', 'type': 'pdf', 'content': 'Are climate models any good or useful at all?\\nhttps://www.gfdl.noaa.gov/visualizations-hurricanes/\\nData or model?\\nCommon misconceptions about modeling1.The goal of modeling is to reproduce data2.If a model doesn’t fit the data, the model is useless (…and modeler also)3.Since modelers don’t measure anything, they don’t know anything about data or care about them4.Measurement(s) of “X” can be used to better constrain climate models5.Process “W” is not explicitly implemented in the model,hence the ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 0}}, {'id': 1753903424228032, 'score': 0.6240388, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_43_md', 'type': 'markdown', 'content': '### The CDS Toolbox\\n\\nAn extention to the CDS API is the [CDS Toolbox](https://cds.climate.copernicus.eu/toolbox/doc/index.html). The Toolbox is a programming interface. It is free and available to everyone. It links raw data to an online computing facility, thereby removing the computing barrier for users worldwide. The Toolbox allows users to develop python scripts for the CDS and to run them online. The users than then simply download the maps, graph or secondary data without needing to incur the costs associated with storing and maintaining the large climate data archive locally, nor is it required to invest in a powerful computer. \\n\\n\\nThe Toolbox works hand-in-hand with the CDS API. \\n\\nThat is, one can issue commmands to the Toolbox via the CDS API, or develop a python script that does certain things, and then use the CDS API functionality to send it to CDS for evaluation, only to download the finished product locally. \\n\\nExamples of how to proceed are given [here](https://confluence.ecmwf.int/display/COPSRV/Call+a+service+with+the+CDS+API). \\n\\nNote, it is also possible to use the CDS Toolbox to plot data from other services (i.e. not originally stored on CDS), using the `remote` function instead of the `service` function. This is possible thanks to protocols such as OPeNDAP. Here is an example using data from UNIDATA. \\n\\nFor illustration of how the Toolbox can be used, the following piece of code, run locally, after the CDS API is properly configured and assuming one is connected to the internet, will produce, and then download to our `output/` directory, a map of global temperature on January 1st 2021 at 14:00.', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 43}}, {'id': 1753901956993712, 'score': 0.6217481, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_4', 'type': 'pdf', 'content': 'ionModel data: we do what the @#$ we want J!•…as long aswe can calculate it and analyze it•… and are aware of model flaws!\\nUsing climate models: attributionhttps://www.worldweatherattribution.org\\nhttps://www.swissre.com/media/news-releases/nr-20191219-global-catastrophes-estimate.htmlWhose faultis it?Who pays for it?Catastrophe-related insured losses (1970-2019)\\n\\nClimate extremes and climate risk•Magnitude•Frequency•Duration•Spatial extent•Whatvariable?–T, Precipitation, winds, sea level, etc.•H', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 4}}, {'id': 1753903424243022, 'score': 0.6215904, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_10_md', 'type': 'markdown', 'content': \" * ### The Climate and Forecast (CF) Metadata Conventions (prominent in climate science)\\n \\nGiven the amount of data produced keeps increasing, data libraries are being developed. As in any library, certain sets of rules are required so that the data can be found later. Metadata are obviously a good way to ensure data can be catalogued and found by various search systems.\\n\\nMultiple types of conventions exist (see for example this [list of netCDF conventions from Unidata](https://www.unidata.ucar.edu/software/netcdf/conventions.html)). Ensuring that data files are produced in a way that follows conventions about content, vocabulary used and layout, allows for batch processing, easy extraction and automation! It is extremely useful (but should not prevent innovation).\\n\\nCEDA, as it focuses on climate and environmental data, relies extensively on the [Climate and Forecast (CF) Conventions](http://cfconventions.org). The CF Conventions are probably the most popular in climate science (it underpins the modelling effort of the IPCC). A detailed description of the latest release of the CF Conventions for netCDF can be found [here](http://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html). \\n\\nThe CF Conventions were designed specifically for the netCDF format but they can be applied widely. The netCDF format enables creation of self-describing datasets by design. CF Conventions aim to ensure that  files contain sufficient metadata that they are self-describing in the sense that each variable in the file has an associated description of what it represents, including physical units if appropriate, and that each value can be located in space (relative to earth-based coordinates) and time. (Absence of such information in early (historical) datasets has hindered climate change science for decades - how does one measure change, if one cannot locate the observations in time and space?)\\n\\nOne example of CF Conventions is to provide a list of **standard_names** for certain commonly-used variables. The [CF standard name table] (http://cfconventions.org/Data/cf-standard-names/current/build/cf-standard-name-table.html) will show what the names are and describe what they represent. \\n\\nTo illustrate, imagine you work with data at the earth surface and label your variable 'temperature'. What did you mean exactly? Surface temperature of the ocean/land, or air temperature? etc. CF conventions ensure that climate scientists name common variables in the same way. \\n\\nA [python package](https://pypi.org/project/cfunits/) called `cfunits` provides an interface to the CF Convention. This is useful to combine and compare variables and convert various units. By relying on a package, fewer user-errors are made.   \\n\\nThe CF Conventions are not fixed, they are evolving depending on needs and scientific progress. Although conventions are decided by a committee of experts, anyone can propose a change to the convention by engaging in the [discussion forum](https://cfconventions.org/discussion.html).\\n\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 10}}, {'id': 1753901956747387, 'score': 0.62153935, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_1', 'type': 'pdf', 'content': 'Identify and design suitable data analysis strategies that consider data types, data distribution constraints, strength, benefits and limitations of statistical and modelling tools and environmental dynamics.4. Understand the limitation of available data and data analysis products. Understand sources of errors and demonstrate ability to comprehensively characterize uncertainties and interpret results in the context of these uncertainties, including measurement errors, environmental uncertainties', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 1}}]",
      "[{'id': 1753901957112878, 'score': 0.6977684, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_0', 'type': 'pdf', 'content': 'https://svs.gsfc.nasa.gov/30701Climate data and modelsEDSML MSc –Imperial College London –Environmental dataYves Plancherel-https://www.linkedin.com/in/yves-plancherel/\\nWhy discuss climate data and climate models?\\n1. Understand common data format and databasestructures specific to representative fields of environmental science2. Demonstrate technical competency in handling common data types routinely encountered in the environmental sciences and identify relevant open-source data repositories3. ', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 0}}, {'id': 1753903424509295, 'score': 0.69447625, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_1_md', 'type': 'markdown', 'content': \"---\\n\\n# 01- Introduction to climate data and climate models\\n\\n---\\n\\n<a id='Contents'></a>\\n## Contents\\n- [Lectures](#lectures)\\n- [Question](#question)\\n- [ESMValTool](#ESMValTool)\\n- [Sources of climate data](#climatedata)\\n- [CEDA](#CEDA)\\n- [File formats](#fileformat)\\n- [Metadata](#metadata)\\n- [NetCDF](#NetCDF)\\n- [NCO](#NCO)\\n- [Reanalysis products](#reanalysis)\\n- [Climate services UKCP18](#ukcp18)\\n  \\n## Learning outcomes\\n1. Understand the basics of climate modelling\\n2. Know where to find and how to access climate data (ESGF, CEDA)\\n3. Understand common file formats\\n4. Understand the importance of metadata and understand CF conventions\\n5. Understand the NetCDF file format and know how to read, create and maniputate NetCDF data\\n6. Become familiar with other key tools used to manipulate netCDF data (NCO, CDO)\\n7. Know how to access ERA5 reanalysis products\\n8. Climate Services and UKCP18 and ability to access that data\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 1}}, {'id': 1753901956989969, 'score': 0.6887833, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_2', 'type': 'pdf', 'content': ' as well as errors stemming from the analytical procedure itself (e.g.calibration of analysis using synthetic data/models).Learning objectives of the Environmental Data module•Growing/important field –with likely career opportunities•Great playground to deliver learning objectives\\nUsing climate models: quantification/forecasting(impacts, adaptation, mitigation)\\nhttps://www.noaa.gov/education/resource-collections/climate/climate-change-impacts\\nUsing climate models: designscenarios(explore policy,', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 2}}, {'id': 1753903424143550, 'score': 0.6763811, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_11_md', 'type': 'markdown', 'content': \"<a id='NetCDF'></a>\\n\\n## Network Common Data Form (NetCDF)\\n\\n[NetCDF](https://www.unidata.ucar.edu/software/netcdf/) is one of the most common data format used to store climate data. NetCDF files allow the user to insert metadata in the data file by design, ensuring the data file is self-describing (amongst other properties).\\n\\n*NetCDF is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data.* \\n\\nThe netCDF format, which is a type of HDF format, is attractive because it is:\\n\\n* Self-Describing. A netCDF file includes information about the data it contains and metadata.\\n* Portable. A netCDF file can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.\\n* Scalable. Small subsets of large datasets in various formats may be accessed efficiently through netCDF interfaces, even from remote servers.\\n* Appendable. Data may be appended to a properly structured netCDF file without copying the dataset or redefining its structure.\\n* Sharable. One writer and multiple readers may simultaneously access the same netCDF file.\\n* Archivable. Access to all earlier forms of netCDF data will be supported by current and future versions of the software.\\n\\n\\nThe NetCDF project is maintained by the Unidata program at the University Corporation for Atmospheric Research ([UCAR](https://www.ucar.edu)). [UCAR](https://www.ucar.edu) also manages [NCAR](https://ncar.ucar.edu), one of the first center to have developped climate models and is today one of the gold-standard on the topic. \\n\\nNCAR also developed [NCL](https://www.ncl.ucar.edu), an interpreted programming language designed specifically for scientific data analysis and visualization (we will not use NCL here, but the python package `ESMValTool` has build-in support for it). \\n\\n[NCAR](https://ncar.ucar.edu) has also developped the [climate data guide](https://climatedataguide.ucar.edu), a tool to search and access >200 data sets specific to the ocean, land and the atmosphere. (Some of these data may or may not also be found on CEDA.) \\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 11}}, {'id': 1753902702794239, 'score': 0.6755445, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_8', 'type': 'pdf', 'content': 'cool and warm the climateThe microphysics responsible for cloud formation is not well understoodThe grid cells in models are much much bigger than time/space scales relevant for cloud physicsÞMagnitude/location of rain events is hard to predict wellÞThat information is useful though!\\nComparing models with data•What is a data point? Observation vs model result•Are model solutions at a point similar toa data point (i.e.observational sample)?–Spatially?–Temporally?•Using data well is not a trivial ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 8}}, {'id': 1753903424368210, 'score': 0.6737009, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_2_md', 'type': 'markdown', 'content': \"<a id='lectures'></a>\\n# Lecture on relevance of climate science, climate models and climate modelling\\n\\n\\n(see Powerpoint presentations)\\n\\n1. 01v1_Why_climate_data.pptx/pdf\\n2. 02v1_Building_climate_models.pptx/pdf\\n3. 03v1_Common_issues.pptx/pdf\\n   \\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 2}}, {'id': 1753903424243022, 'score': 0.66646683, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_10_md', 'type': 'markdown', 'content': \" * ### The Climate and Forecast (CF) Metadata Conventions (prominent in climate science)\\n \\nGiven the amount of data produced keeps increasing, data libraries are being developed. As in any library, certain sets of rules are required so that the data can be found later. Metadata are obviously a good way to ensure data can be catalogued and found by various search systems.\\n\\nMultiple types of conventions exist (see for example this [list of netCDF conventions from Unidata](https://www.unidata.ucar.edu/software/netcdf/conventions.html)). Ensuring that data files are produced in a way that follows conventions about content, vocabulary used and layout, allows for batch processing, easy extraction and automation! It is extremely useful (but should not prevent innovation).\\n\\nCEDA, as it focuses on climate and environmental data, relies extensively on the [Climate and Forecast (CF) Conventions](http://cfconventions.org). The CF Conventions are probably the most popular in climate science (it underpins the modelling effort of the IPCC). A detailed description of the latest release of the CF Conventions for netCDF can be found [here](http://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html). \\n\\nThe CF Conventions were designed specifically for the netCDF format but they can be applied widely. The netCDF format enables creation of self-describing datasets by design. CF Conventions aim to ensure that  files contain sufficient metadata that they are self-describing in the sense that each variable in the file has an associated description of what it represents, including physical units if appropriate, and that each value can be located in space (relative to earth-based coordinates) and time. (Absence of such information in early (historical) datasets has hindered climate change science for decades - how does one measure change, if one cannot locate the observations in time and space?)\\n\\nOne example of CF Conventions is to provide a list of **standard_names** for certain commonly-used variables. The [CF standard name table] (http://cfconventions.org/Data/cf-standard-names/current/build/cf-standard-name-table.html) will show what the names are and describe what they represent. \\n\\nTo illustrate, imagine you work with data at the earth surface and label your variable 'temperature'. What did you mean exactly? Surface temperature of the ocean/land, or air temperature? etc. CF conventions ensure that climate scientists name common variables in the same way. \\n\\nA [python package](https://pypi.org/project/cfunits/) called `cfunits` provides an interface to the CF Convention. This is useful to combine and compare variables and convert various units. By relying on a package, fewer user-errors are made.   \\n\\nThe CF Conventions are not fixed, they are evolving depending on needs and scientific progress. Although conventions are decided by a committee of experts, anyone can propose a change to the convention by engaging in the [discussion forum](https://cfconventions.org/discussion.html).\\n\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 10}}, {'id': 1753902702944729, 'score': 0.66383344, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_9', 'type': 'pdf', 'content': 'task. It requires understanding the model well and the data well–A trend towards “Observational System Simulation Experiments” (OSSE)–data assimilation (e.g.4DVAR)\\nThe role of observationsin modeling\\nhttp://www.climate.be/textbook/pdf/Chapter_3.pdf\\nModelsvs observations•There are data that are ’just’ observations•There are models that are ‘just’ models•There are models that are ‘assimilated with data’–Often called ‘Reanalysis Products’•(also used in weather forecasting, obviously)–These are mode', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 9}}, {'id': 1753902702922525, 'score': 0.6623478, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_0', 'type': 'pdf', 'content': 'Are climate models any good or useful at all?\\nhttps://www.gfdl.noaa.gov/visualizations-hurricanes/\\nData or model?\\nCommon misconceptions about modeling1.The goal of modeling is to reproduce data2.If a model doesn’t fit the data, the model is useless (…and modeler also)3.Since modelers don’t measure anything, they don’t know anything about data or care about them4.Measurement(s) of “X” can be used to better constrain climate models5.Process “W” is not explicitly implemented in the model,hence the ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 0}}, {'id': 1753903424142956, 'score': 0.66128266, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_4_md', 'type': 'markdown', 'content': \"<a id='ESMValTool'></a>\\n\\n# Python environments to consider for working with climate data \\n\\n* ## Earth System Model Evaluation Tool (ESMValTool)\\n![esmvaltool](img/ESMValTool-logo-2.png)\\n\\nThis week, it should be possible to simply install packages as needed...\\n\\nHowever, if you anticipate possible future needs, you may want to invest a bit of effort to setup a specific python environment to work with climate data. If so, a good place to start is the `ESMValTool` project. \\n\\n\\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) is  a community-led, open source, set of software tools (build on python 3) developed to improve diagnosing and understanding climate models. While the focus has been on climate models, not observations, one cannot quantify model biases without also comparing the model results with observations. [ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) therefore also has some capability to analyze and manipulate large datasets. \\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) can work offline, but as the amount of climate data is so large, it is mostly designed to work with data centers that provide local access to the vast amount of data. One such initiative is the Earth System Grid Federation ([ESGF](https://esgf.llnl.gov)). ESMValTool provides functionality to work on HPC systems.\\n\\nWe will not use ESMValTool here specifically, but it will install other convenient tools and you may be curious to investigate ESMValTool capabilities on your own anyways. It is now used routinely for climate modelling research. \\n\\nAdditional information and help can be found at https://www.esmvaltoolorg, and on the [ESMValGroup](https://github.com/ESMValGroup) github page. The [ESMValTool tutorial](https://esmvalgroup.github.io/ESMValTool_Tutorial/) is a great resource to get started. \\n\\n\\n### OPTIONAL: Installing ESMValTool (NB: this often fails for students - installing this is not required for the course)\\n[Installation instructions](https://docs.esmvaltool.org/en/latest/quickstart/installation.html) differ by operating system and it is very much an experimental, in development, tool - keep this in mind! \\n\\n[Notes:ESMValTool 2.0 requires a Unix(-like) operating system and Python 3.7+. (Python 3.7, 3.8 and 3.9 are supported). On my laptop (Macbook pro 13'' M1 2020 with OS Monterey 12.0.1), I installed it in Nov 2021 with Python 3.9.7. ...but I installed it when 'conda' was still an installation option. ESMValTool developer have  changed installation methods to `mamba` recently. Do refer to online/official instructions). You will now be required to also [install `mamba`](https://docs.esmvaltool.org/en/latest/quickstart/installation.html#mamba-installation) first (...yet another package/dependency manager).] \\n\\nESMValTool can also work with Julia, R, NCL. Do check installation instructions for these extensions. \\n\\n[back to contents](##Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 4}}, {'id': 1753902300429530, 'score': 0.6537339, 'payload': {'original_id': 'uploads\\\\02v1_Building_climate_models_copy.pdf_chunk_6', 'type': 'pdf', 'content': 'ce scales of interest–Integration time step–Spatial resolution of the grid–Duration of model run–Decisions about time/space scales also translate into “filtering” the equations •(parts of the equations can be neglected and the equations simplified –some physics can be neglected/simplified)\\nWhy model climate?\\n\\nWeather and climate –bridging the gap\\n\\n\\nWhat are coupledclimatemodels?\\n\\nA few key major coupling mechanisms between the ocean and the atmosphere\\nThe “coupler” is the heart of climate models', 'source_document': 'uploads\\\\02v1_Building_climate_models_copy.pdf', 'chunk_number': 6}}, {'id': 1753903424357433, 'score': 0.65066147, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_5_md', 'type': 'markdown', 'content': \"<a id='climatedata'></a>\\n\\n# Working with climate data and climate models\\n\\n### Earth System Grid Federation (ESGF)\\n\\n![esgf](img/ESGF_logo.png)\\n\\n\\n[ESGF](https://esgf.llnl.gov) is an open-source platform that provides distributed access to peta/exa-scale scientific data, **globally**. \\n\\nIt is an interagency and international effort led by the US Department of Energy (DOE), co-funded by National Aeronautics and Space Administration (NASA), National Oceanic and Atmospheric Administration (NOAA), the US National Science Foundation (NSF), and other international partners, such as the Max Planck Institute for Meteorology (MPI-M) German Climate Computing Centre (DKRZ), the Australian National University (ANU) National Computational Infrastructure (NCI), Institut Pierre-Simon Laplace (IPSL), and the **Centre for Environmental Data Analysis ([CEDA](https://www.ceda.ac.uk))** in the UK.\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 5}}, {'id': 1753902703503123, 'score': 0.64943343, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_1', 'type': 'pdf', 'content': 'model cannot model the effect of “Z” on climate as “W” has or may have an (unquantified) effect of the “Z” and may effectCO2or T, etc. … therefore climate models are useless\\nSome better propositions1.All models are “wrong” and “incomplete”(modeling with the sole goal of fitting data can be futile)(state-or-the-art models have many free parameters, uniqueness of the fit/solution is not always guaranteed –fit for wrong reason possible)2.Models have the merit of being internally consistent and poss', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 1}}, {'id': 1753902702662417, 'score': 0.6491865, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_10', 'type': 'pdf', 'content': 'ls that are ‘fitted’ to data•Some model parameters are tuned to fit–Question is what to fit/how? (Data assimilation, 4DVAR)–Provide best gridded high-resolution spatio-temporal product available … but:•they are still model results–Fitting a bad/wrong model still is a bad results•they only exist for the period when data exist–so cannot be used for forecasting–But extremely useful to understand past/current climate patterns/variability\\nAre models ever “right”?•Since models are incomplete by constr', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 10}}, {'id': 1753901956917450, 'score': 0.64739597, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_3', 'type': 'pdf', 'content': ' technology options)\\n\\nUsing climate models: variability(temporal, spatial)\\nImportance of experimental design!Control+ experiment\\nUsing climate models: uncertainties and sensitivities\\nMIP = Model Intercomparison Project\\nEyring et al. 2016\\nUsing climate models: uncertainties and sensitivities\\nhttps://en.wikipedia.org/wiki/Climate_ensembleDifferent experimentswith many ensembles!Each one trying to account for sensitivity due to a source of error Real world data: we only have one Earth, ONE realizat', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 3}}, {'id': 1753902299806645, 'score': 0.6465137, 'payload': {'original_id': 'uploads\\\\02v1_Building_climate_models_copy.pdf_chunk_2', 'type': 'pdf', 'content': ' problem under study, etc.\\nWhat does a model need?A very simple numerical exampledCdt=λCCi+1−Citi+1−ti=λCiCi+1=Ci1+λΔt()dCdt=limΔt→0C(t+Δt)−C(t)ΔtRequires discretization of derivativesand numerical integration to step forward from tito tf=NDTForward difference(aka Forward Euler)[climatemodelsusemuchmorecomplex schemes]\\nii+1\\nWhat does a model need?Discretization needed to implement numericallydCdt=λCCi+1−CiΔt=λCi+1Ci+1=λΔtCi+1+CiCi+1=Ci11−λΔtBackward difference(aka backward Euler)Requires solving', 'source_document': 'uploads\\\\02v1_Building_climate_models_copy.pdf', 'chunk_number': 2}}, {'id': 1753903424623019, 'score': 0.6450286, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_37_md', 'type': 'markdown', 'content': \"### Climate Data Operators (CDO)\\nThe Climate Data Operators ([CDO](https://code.mpimet.mpg.de/projects/cdo)) software is a collection of >600 operators for standard processing of climate and forecast model data. They are slighly less memory/speed efficient than NCO, but they do more (>600 vs 12!). CDO support the main data formats used in the field, such as GRIB and netCDF. \\n\\nThey too can be daisy-chained for specific applications. There are [many recipes available](https://code.mpimet.mpg.de/projects/cdo/embedded/cdo_eca.pdf) to calculate various climate indices and diagnostics, what makes them very attractive to evaluate gridded climate data or climate model output.\\n\\nThe [CDO user guide](https://code.mpimet.mpg.de/projects/cdo/embedded/index.html) provides details instructions and examples. \\n\\n[They are also very useful, but we don't have time to discuss them in detail here. You are encouraged to practice with CDO on your own time]\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 37}}, {'id': 1753902300206271, 'score': 0.64047927, 'payload': {'original_id': 'uploads\\\\02v1_Building_climate_models_copy.pdf_chunk_0', 'type': 'pdf', 'content': 'Climate models –what are they?\\n…and different grids for different parts of the model:atmosphere, ocean, land, ice,…\\n\\nA bit of review: What do we need to make a model?(Any model, not necessarily a climate one)\\nWhat does a model need?A very simple analytical exampledCdt=λRequires equations (hypotheses about underlying physics)\\nWhat does a model need?A very simple analytical exampledCdt=λdCCoCf∫=λdttotf∫Cf=λtf−to()−CoRequires initial &boundary conditionsRequires equations (hypotheses about underlyi', 'source_document': 'uploads\\\\02v1_Building_climate_models_copy.pdf', 'chunk_number': 0}}, {'id': 1753901956993712, 'score': 0.63959926, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_4', 'type': 'pdf', 'content': 'ionModel data: we do what the @#$ we want J!•…as long aswe can calculate it and analyze it•… and are aware of model flaws!\\nUsing climate models: attributionhttps://www.worldweatherattribution.org\\nhttps://www.swissre.com/media/news-releases/nr-20191219-global-catastrophes-estimate.htmlWhose faultis it?Who pays for it?Catastrophe-related insured losses (1970-2019)\\n\\nClimate extremes and climate risk•Magnitude•Frequency•Duration•Spatial extent•Whatvariable?–T, Precipitation, winds, sea level, etc.•H', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 4}}, {'id': 1753901956747387, 'score': 0.63951325, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_1', 'type': 'pdf', 'content': 'Identify and design suitable data analysis strategies that consider data types, data distribution constraints, strength, benefits and limitations of statistical and modelling tools and environmental dynamics.4. Understand the limitation of available data and data analysis products. Understand sources of errors and demonstrate ability to comprehensively characterize uncertainties and interpret results in the context of these uncertainties, including measurement errors, environmental uncertainties', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 1}}]",
      "[{'id': 1753902702944729, 'score': 0.69506735, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_9', 'type': 'pdf', 'content': 'task. It requires understanding the model well and the data well–A trend towards “Observational System Simulation Experiments” (OSSE)–data assimilation (e.g.4DVAR)\\nThe role of observationsin modeling\\nhttp://www.climate.be/textbook/pdf/Chapter_3.pdf\\nModelsvs observations•There are data that are ’just’ observations•There are models that are ‘just’ models•There are models that are ‘assimilated with data’–Often called ‘Reanalysis Products’•(also used in weather forecasting, obviously)–These are mode', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 9}}, {'id': 1753901956989969, 'score': 0.6945951, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_2', 'type': 'pdf', 'content': ' as well as errors stemming from the analytical procedure itself (e.g.calibration of analysis using synthetic data/models).Learning objectives of the Environmental Data module•Growing/important field –with likely career opportunities•Great playground to deliver learning objectives\\nUsing climate models: quantification/forecasting(impacts, adaptation, mitigation)\\nhttps://www.noaa.gov/education/resource-collections/climate/climate-change-impacts\\nUsing climate models: designscenarios(explore policy,', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 2}}, {'id': 1753901956917450, 'score': 0.68212616, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_3', 'type': 'pdf', 'content': ' technology options)\\n\\nUsing climate models: variability(temporal, spatial)\\nImportance of experimental design!Control+ experiment\\nUsing climate models: uncertainties and sensitivities\\nMIP = Model Intercomparison Project\\nEyring et al. 2016\\nUsing climate models: uncertainties and sensitivities\\nhttps://en.wikipedia.org/wiki/Climate_ensembleDifferent experimentswith many ensembles!Each one trying to account for sensitivity due to a source of error Real world data: we only have one Earth, ONE realizat', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 3}}, {'id': 1753902702662417, 'score': 0.67320645, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_10', 'type': 'pdf', 'content': 'ls that are ‘fitted’ to data•Some model parameters are tuned to fit–Question is what to fit/how? (Data assimilation, 4DVAR)–Provide best gridded high-resolution spatio-temporal product available … but:•they are still model results–Fitting a bad/wrong model still is a bad results•they only exist for the period when data exist–so cannot be used for forecasting–But extremely useful to understand past/current climate patterns/variability\\nAre models ever “right”?•Since models are incomplete by constr', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 10}}, {'id': 1753901956747387, 'score': 0.66677094, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_1', 'type': 'pdf', 'content': 'Identify and design suitable data analysis strategies that consider data types, data distribution constraints, strength, benefits and limitations of statistical and modelling tools and environmental dynamics.4. Understand the limitation of available data and data analysis products. Understand sources of errors and demonstrate ability to comprehensively characterize uncertainties and interpret results in the context of these uncertainties, including measurement errors, environmental uncertainties', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 1}}, {'id': 1753903424509295, 'score': 0.66460335, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_1_md', 'type': 'markdown', 'content': \"---\\n\\n# 01- Introduction to climate data and climate models\\n\\n---\\n\\n<a id='Contents'></a>\\n## Contents\\n- [Lectures](#lectures)\\n- [Question](#question)\\n- [ESMValTool](#ESMValTool)\\n- [Sources of climate data](#climatedata)\\n- [CEDA](#CEDA)\\n- [File formats](#fileformat)\\n- [Metadata](#metadata)\\n- [NetCDF](#NetCDF)\\n- [NCO](#NCO)\\n- [Reanalysis products](#reanalysis)\\n- [Climate services UKCP18](#ukcp18)\\n  \\n## Learning outcomes\\n1. Understand the basics of climate modelling\\n2. Know where to find and how to access climate data (ESGF, CEDA)\\n3. Understand common file formats\\n4. Understand the importance of metadata and understand CF conventions\\n5. Understand the NetCDF file format and know how to read, create and maniputate NetCDF data\\n6. Become familiar with other key tools used to manipulate netCDF data (NCO, CDO)\\n7. Know how to access ERA5 reanalysis products\\n8. Climate Services and UKCP18 and ability to access that data\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 1}}, {'id': 1753903424142956, 'score': 0.6555898, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_4_md', 'type': 'markdown', 'content': \"<a id='ESMValTool'></a>\\n\\n# Python environments to consider for working with climate data \\n\\n* ## Earth System Model Evaluation Tool (ESMValTool)\\n![esmvaltool](img/ESMValTool-logo-2.png)\\n\\nThis week, it should be possible to simply install packages as needed...\\n\\nHowever, if you anticipate possible future needs, you may want to invest a bit of effort to setup a specific python environment to work with climate data. If so, a good place to start is the `ESMValTool` project. \\n\\n\\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) is  a community-led, open source, set of software tools (build on python 3) developed to improve diagnosing and understanding climate models. While the focus has been on climate models, not observations, one cannot quantify model biases without also comparing the model results with observations. [ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) therefore also has some capability to analyze and manipulate large datasets. \\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) can work offline, but as the amount of climate data is so large, it is mostly designed to work with data centers that provide local access to the vast amount of data. One such initiative is the Earth System Grid Federation ([ESGF](https://esgf.llnl.gov)). ESMValTool provides functionality to work on HPC systems.\\n\\nWe will not use ESMValTool here specifically, but it will install other convenient tools and you may be curious to investigate ESMValTool capabilities on your own anyways. It is now used routinely for climate modelling research. \\n\\nAdditional information and help can be found at https://www.esmvaltoolorg, and on the [ESMValGroup](https://github.com/ESMValGroup) github page. The [ESMValTool tutorial](https://esmvalgroup.github.io/ESMValTool_Tutorial/) is a great resource to get started. \\n\\n\\n### OPTIONAL: Installing ESMValTool (NB: this often fails for students - installing this is not required for the course)\\n[Installation instructions](https://docs.esmvaltool.org/en/latest/quickstart/installation.html) differ by operating system and it is very much an experimental, in development, tool - keep this in mind! \\n\\n[Notes:ESMValTool 2.0 requires a Unix(-like) operating system and Python 3.7+. (Python 3.7, 3.8 and 3.9 are supported). On my laptop (Macbook pro 13'' M1 2020 with OS Monterey 12.0.1), I installed it in Nov 2021 with Python 3.9.7. ...but I installed it when 'conda' was still an installation option. ESMValTool developer have  changed installation methods to `mamba` recently. Do refer to online/official instructions). You will now be required to also [install `mamba`](https://docs.esmvaltool.org/en/latest/quickstart/installation.html#mamba-installation) first (...yet another package/dependency manager).] \\n\\nESMValTool can also work with Julia, R, NCL. Do check installation instructions for these extensions. \\n\\n[back to contents](##Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 4}}, {'id': 1753902702922525, 'score': 0.6543847, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_0', 'type': 'pdf', 'content': 'Are climate models any good or useful at all?\\nhttps://www.gfdl.noaa.gov/visualizations-hurricanes/\\nData or model?\\nCommon misconceptions about modeling1.The goal of modeling is to reproduce data2.If a model doesn’t fit the data, the model is useless (…and modeler also)3.Since modelers don’t measure anything, they don’t know anything about data or care about them4.Measurement(s) of “X” can be used to better constrain climate models5.Process “W” is not explicitly implemented in the model,hence the ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 0}}, {'id': 1753903424623019, 'score': 0.64980686, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_37_md', 'type': 'markdown', 'content': \"### Climate Data Operators (CDO)\\nThe Climate Data Operators ([CDO](https://code.mpimet.mpg.de/projects/cdo)) software is a collection of >600 operators for standard processing of climate and forecast model data. They are slighly less memory/speed efficient than NCO, but they do more (>600 vs 12!). CDO support the main data formats used in the field, such as GRIB and netCDF. \\n\\nThey too can be daisy-chained for specific applications. There are [many recipes available](https://code.mpimet.mpg.de/projects/cdo/embedded/cdo_eca.pdf) to calculate various climate indices and diagnostics, what makes them very attractive to evaluate gridded climate data or climate model output.\\n\\nThe [CDO user guide](https://code.mpimet.mpg.de/projects/cdo/embedded/index.html) provides details instructions and examples. \\n\\n[They are also very useful, but we don't have time to discuss them in detail here. You are encouraged to practice with CDO on your own time]\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 37}}, {'id': 1753902702794239, 'score': 0.64224625, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_8', 'type': 'pdf', 'content': 'cool and warm the climateThe microphysics responsible for cloud formation is not well understoodThe grid cells in models are much much bigger than time/space scales relevant for cloud physicsÞMagnitude/location of rain events is hard to predict wellÞThat information is useful though!\\nComparing models with data•What is a data point? Observation vs model result•Are model solutions at a point similar toa data point (i.e.observational sample)?–Spatially?–Temporally?•Using data well is not a trivial ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 8}}, {'id': 1753903424368210, 'score': 0.63916546, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_2_md', 'type': 'markdown', 'content': \"<a id='lectures'></a>\\n# Lecture on relevance of climate science, climate models and climate modelling\\n\\n\\n(see Powerpoint presentations)\\n\\n1. 01v1_Why_climate_data.pptx/pdf\\n2. 02v1_Building_climate_models.pptx/pdf\\n3. 03v1_Common_issues.pptx/pdf\\n   \\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 2}}, {'id': 1753901957112878, 'score': 0.6375729, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_0', 'type': 'pdf', 'content': 'https://svs.gsfc.nasa.gov/30701Climate data and modelsEDSML MSc –Imperial College London –Environmental dataYves Plancherel-https://www.linkedin.com/in/yves-plancherel/\\nWhy discuss climate data and climate models?\\n1. Understand common data format and databasestructures specific to representative fields of environmental science2. Demonstrate technical competency in handling common data types routinely encountered in the environmental sciences and identify relevant open-source data repositories3. ', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 0}}, {'id': 1753903424243022, 'score': 0.6329803, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_10_md', 'type': 'markdown', 'content': \" * ### The Climate and Forecast (CF) Metadata Conventions (prominent in climate science)\\n \\nGiven the amount of data produced keeps increasing, data libraries are being developed. As in any library, certain sets of rules are required so that the data can be found later. Metadata are obviously a good way to ensure data can be catalogued and found by various search systems.\\n\\nMultiple types of conventions exist (see for example this [list of netCDF conventions from Unidata](https://www.unidata.ucar.edu/software/netcdf/conventions.html)). Ensuring that data files are produced in a way that follows conventions about content, vocabulary used and layout, allows for batch processing, easy extraction and automation! It is extremely useful (but should not prevent innovation).\\n\\nCEDA, as it focuses on climate and environmental data, relies extensively on the [Climate and Forecast (CF) Conventions](http://cfconventions.org). The CF Conventions are probably the most popular in climate science (it underpins the modelling effort of the IPCC). A detailed description of the latest release of the CF Conventions for netCDF can be found [here](http://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html). \\n\\nThe CF Conventions were designed specifically for the netCDF format but they can be applied widely. The netCDF format enables creation of self-describing datasets by design. CF Conventions aim to ensure that  files contain sufficient metadata that they are self-describing in the sense that each variable in the file has an associated description of what it represents, including physical units if appropriate, and that each value can be located in space (relative to earth-based coordinates) and time. (Absence of such information in early (historical) datasets has hindered climate change science for decades - how does one measure change, if one cannot locate the observations in time and space?)\\n\\nOne example of CF Conventions is to provide a list of **standard_names** for certain commonly-used variables. The [CF standard name table] (http://cfconventions.org/Data/cf-standard-names/current/build/cf-standard-name-table.html) will show what the names are and describe what they represent. \\n\\nTo illustrate, imagine you work with data at the earth surface and label your variable 'temperature'. What did you mean exactly? Surface temperature of the ocean/land, or air temperature? etc. CF conventions ensure that climate scientists name common variables in the same way. \\n\\nA [python package](https://pypi.org/project/cfunits/) called `cfunits` provides an interface to the CF Convention. This is useful to combine and compare variables and convert various units. By relying on a package, fewer user-errors are made.   \\n\\nThe CF Conventions are not fixed, they are evolving depending on needs and scientific progress. Although conventions are decided by a committee of experts, anyone can propose a change to the convention by engaging in the [discussion forum](https://cfconventions.org/discussion.html).\\n\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 10}}, {'id': 1753903424357433, 'score': 0.63146734, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_5_md', 'type': 'markdown', 'content': \"<a id='climatedata'></a>\\n\\n# Working with climate data and climate models\\n\\n### Earth System Grid Federation (ESGF)\\n\\n![esgf](img/ESGF_logo.png)\\n\\n\\n[ESGF](https://esgf.llnl.gov) is an open-source platform that provides distributed access to peta/exa-scale scientific data, **globally**. \\n\\nIt is an interagency and international effort led by the US Department of Energy (DOE), co-funded by National Aeronautics and Space Administration (NASA), National Oceanic and Atmospheric Administration (NOAA), the US National Science Foundation (NSF), and other international partners, such as the Max Planck Institute for Meteorology (MPI-M) German Climate Computing Centre (DKRZ), the Australian National University (ANU) National Computational Infrastructure (NCI), Institut Pierre-Simon Laplace (IPSL), and the **Centre for Environmental Data Analysis ([CEDA](https://www.ceda.ac.uk))** in the UK.\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 5}}, {'id': 1753903424104630, 'score': 0.6300446, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_0_md', 'type': 'markdown', 'content': '---\\n\\n# <center> Environmental Data </center>\\n\\n---\\n\\n## Course objectives and philosophy\\nLet\\'s start by recalling what the learning objective of the Environmental Data modules are:\\n\\n1. Understand common data format and database structures specific to representative fields of environmental science\\n2. Demonstrate technical competency in handling common data types routinely encountered in the environmental sciences and identify relevant open-source data repositories\\n3. Identify and design suitable data analysis strategies that consider data types, data distribution constraints, strength, benefits and limitations of statistical and modelling tools and environmental dynamics.\\n4. Understand the limitation of available data and data analysis products. Understand sources of errors and demonstrate ability to comprehensively characterize uncertainties and interpret results in the context of these uncertainties, including measurement errors, environmental uncertainties as well as errors stemming from the analytical procedure itself (e.g. calibration of analysis using synthetic data/models).\\n\\nYou\\'ll note that these objectives address a progression of skills. The first focus on technical competency (understanding common data format and an ability to manipulate these data). The last two go deeper than technical competency - these aim to develop a data analysis workflow. In real-life situations, some of that workflow will be informed by intuition, and the best workflow will depend on context (e.g. time, infrastructure available) and on the objectives of a study. \\n\\nIntuition will come with experience, and therefore, also from failure! This course is an opportunity to try, sometimes fail ... and therefore learn! (That is the luxury of being a student!) With that in mind, some of the coursework presented here will be purposefully \"vague\". This is not meant to be annoying, it is designed to push you to seek and explore possible solutions (solutions are rarely unique) and express your creativity as an analyst. \\n\\n**Important**: Data analysis is a key component of the scientific method and therefore cannot exist without `hypothesis testing`. Approach every part of the data analysis workflow as a test, an experiment. Each experiment should be motivated by a hypothesis (a goal), will involve applying a methodology, will produce results pertinent to the hypothesis/goal, and will require a critique of these results with regards to their ability to address the hypothesis/goal before drawing a conclusion (it is ok for conclusions to come with caveats and uncertainties if the analysis warrants limits of interpretation).  \\n\\n**Warning**: Data analysis can also be a bit of  \"rabbit hole\"! There will always be nicer, cooler, better things to do. Sometimes, good is good enough though. Whatever you do, never lose sight of the overall objectives of a study. This needs to be delivered in priority.\\n\\n## This segment of the module\\nIn this module, content will be delivered using a mixture of\\npowerpoint lectures, jupyter notebooks and practical exercises.\\n\\nWarning: other directories, containing figures, images, animations or data are also provided. \\nHowever, cliamte data can be very large, and github has a low limit for these. \\nA dropbox link with data also exist: https://www.dropbox.com/sh/fxcmtbz4o3tacz1/AABjQbeyg27zDh1chZxRDFcpa?dl=0\\n\\n### Github repository: `environmental_data_week1`\\n\\n\\n## We will focus and use climate data.\\nThis segment of the module will focus on 2D, 3D and 4D data. To illustrate techniques and learn some useful skills, we will use data around the theme of climate and climate change. As part of this, we will learn how to access and use climate data and output from global climate models. \\n\\nThe science of climate is beyond the scope of this course, but although we will focus on data analysis, it is my hope that you will develop an appreciation and better understanding of climate science in the process. \\n___', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 0}}, {'id': 1753903424262111, 'score': 0.62271565, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_38_md', 'type': 'markdown', 'content': \"<a id='reanalysis'></a>\\n\\n# Reanalysis products\\n\\n![C3S](img/c3s-logo.png)\\n![ECMWF](img/logo-ecmwf.png) \\n\\n[*ERA5 provides hourly estimates of a large number of atmospheric, land and oceanic climate variables. The data cover the Earth on a 30km grid and resolve the atmosphere using 137 levels from the surface up to a height of 80km. ERA5 includes information about uncertainties for all variables at reduced spatial and temporal resolutions.Quality-assured monthly updates of ERA5 (1979 to present) are published within 3 months of real time. Preliminary daily updates of the dataset are available to users within 5 days of real time.*](https://www.ecmwf.int/en/forecasts/datasets/reanalysis-datasets/era5)\\n\\n[ERA5](https://confluence.ecmwf.int/display/CKB/ERA5) is a [family of datasets](https://confluence.ecmwf.int/display/CKB/The+family+of+ERA5+datasets). It currently comprises ERA5, ERA5.1 and ERA5-Land. ERA5 is the fifth generation ECMWF atmospheric reanalysis of the global climate covering the period from January 1950 to present. ERA5 is produced by the Copernicus Climate Change Service ([C3S](https://confluence.ecmwf.int/pages/viewpage.action?pageId=151530614)) at the European Center for Medium-Range Weather Forecasts ([ECMWF](https://www.ecmwf.int)) and made available via the [Climate Change Service](https://climate.copernicus.eu). \\n\\nImportantly, ERA5 is a [**reanalysis product**](https://www.youtube.com/watch?v=FAGobvUGl24), meaning a **model that assimilates data**. A model of the climate (weather) is run, and adjusted (following certain laws of physics and constraints) to fit [as many observations](https://confluence.ecmwf.int/display/CKB/ERA5%3A+data+documentation#ERA5:datadocumentation-Observations) as possible using a technique called 4D-var. One must realize that, even if assimimated prodcuts such as ERA5 are often used 'in lieu' of observations, they are **\\\\*not\\\\*** observations: they are a model product, but a product that is made to look as much like the data as possible given computational, mathematical, physical limitations of the model. \\n\\nERA5 is one of various [reanalysis products](https://reanalyses.org) available globally. Another well-known produce is the [NCEP/NCAR Reanalysis product](https://en.wikipedia.org/wiki/NCEP/NCAR_Reanalysis). [MERRA-2](https://gmao.gsfc.nasa.gov/reanalysis/MERRA-2/), produced by NASA, is another. \\n\\nThe article by [Hersbach et al. 2020](https://rmets.onlinelibrary.wiley.com/doi/10.1002/qj.3803) discusses the ERA global Reanalysis prodcuct in more detail.\\n\\nWhile observations are only available in specific locations and at specific times, the reanalysis product provides a clever way to dynamically interpolate between these observations. ERA5 also comes as a gridded product, making it very convenient to use. In the model-world, one can access a complete/global picture every time-step, with a spatial resolution as high as computational limits allow. I re-emphasize that this is not the same as observations! ... but it is as close to observations as we can get if one is trying to work with a spatially and temporall interpolated product. \\n\\n**Grid geometry depends on data format**: Note that the grid geometry of the output data of ERA5 [depends on the format the data that are being downloaded](https://confluence.ecmwf.int/display/CKB/ERA5%3A+What+is+the+spatial+reference). Native GRIB format data are delivered on the model's native grid geometry (this is not a regular lat/lon grid!). On the other hand, data in NetCDF format are automatically interpolated and regridded to a regular lat/lon grid. While this is not very important for most application, one must remember that interpolated data in the NetCDF files are not the same as the original model output and this could have implication for the conservation properties of some variables. It can be easier/convenient to work with data interpolated on a regular lat/lon grid, however.  \\n\\n**Grid definition and wrap-around**: The gridded ERA5 archive is provided on a [-90;+90] latitude grid and a [0;+360] longitude grid, with decimal degrees, referenced to the Greenwich Prime Meridian. While latitude is generally not an issue, care must be taken when working with longitude as one must remember that 0 and 360 are the same point. One must account for the wrap-around issue: although the first column and last column of a datasets on the [0;+360] grid are far away from each other in terms of index, these points are geographically very close. Some software can automatically deal with this wrap-around and convert to [-180;+180] or other system as required, but this should not be taken for granted. \\n\\n\\n[back to contents](#Contents)\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 38}}, {'id': 1753903424804905, 'score': 0.6216201, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_42_code', 'type': 'code', 'content': \"#!/usr/bin/env python\\nimport cdsapi\\n \\nc = cdsapi.Client()\\n \\nc.retrieve(\\n    'reanalysis-era5-pressure-levels',\\n    {\\n        'product_type': 'reanalysis',\\n        'variable': 'temperature',\\n        'pressure_level': '1000',\\n        'year': '2021',\\n        'month': '01',\\n        'day': '01',\\n        'time': '12:00',\\n        'format': 'netcdf',                         # NetCDF\\n        'area'          : [60., -11., 34., 35.],    # Default area is global; provide [North, West, South, East] limits to select an area (here selecting Europe)\\n        'grid'          : [1.0, 1.0],               #  Default atmospheric resolution is 0.25 x 0.25; provie [Latitude/longitude] grid resolution to interpolate data to something else.           \\n    },\\n    'output/ERAtest_subarea_1deg1deg.nc')           # Output file. Adapt as you wish.\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 42}}, {'id': 1753901956993712, 'score': 0.6213299, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_4', 'type': 'pdf', 'content': 'ionModel data: we do what the @#$ we want J!•…as long aswe can calculate it and analyze it•… and are aware of model flaws!\\nUsing climate models: attributionhttps://www.worldweatherattribution.org\\nhttps://www.swissre.com/media/news-releases/nr-20191219-global-catastrophes-estimate.htmlWhose faultis it?Who pays for it?Catastrophe-related insured losses (1970-2019)\\n\\nClimate extremes and climate risk•Magnitude•Frequency•Duration•Spatial extent•Whatvariable?–T, Precipitation, winds, sea level, etc.•H', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 4}}, {'id': 1753902300429530, 'score': 0.62041306, 'payload': {'original_id': 'uploads\\\\02v1_Building_climate_models_copy.pdf_chunk_6', 'type': 'pdf', 'content': 'ce scales of interest–Integration time step–Spatial resolution of the grid–Duration of model run–Decisions about time/space scales also translate into “filtering” the equations •(parts of the equations can be neglected and the equations simplified –some physics can be neglected/simplified)\\nWhy model climate?\\n\\nWeather and climate –bridging the gap\\n\\n\\nWhat are coupledclimatemodels?\\n\\nA few key major coupling mechanisms between the ocean and the atmosphere\\nThe “coupler” is the heart of climate models', 'source_document': 'uploads\\\\02v1_Building_climate_models_copy.pdf', 'chunk_number': 6}}, {'id': 1753902703503123, 'score': 0.6160407, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_1', 'type': 'pdf', 'content': 'model cannot model the effect of “Z” on climate as “W” has or may have an (unquantified) effect of the “Z” and may effectCO2or T, etc. … therefore climate models are useless\\nSome better propositions1.All models are “wrong” and “incomplete”(modeling with the sole goal of fitting data can be futile)(state-or-the-art models have many free parameters, uniqueness of the fit/solution is not always guaranteed –fit for wrong reason possible)2.Models have the merit of being internally consistent and poss', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 1}}]",
      "[{'id': 1753903424243022, 'score': 0.69387007, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_10_md', 'type': 'markdown', 'content': \" * ### The Climate and Forecast (CF) Metadata Conventions (prominent in climate science)\\n \\nGiven the amount of data produced keeps increasing, data libraries are being developed. As in any library, certain sets of rules are required so that the data can be found later. Metadata are obviously a good way to ensure data can be catalogued and found by various search systems.\\n\\nMultiple types of conventions exist (see for example this [list of netCDF conventions from Unidata](https://www.unidata.ucar.edu/software/netcdf/conventions.html)). Ensuring that data files are produced in a way that follows conventions about content, vocabulary used and layout, allows for batch processing, easy extraction and automation! It is extremely useful (but should not prevent innovation).\\n\\nCEDA, as it focuses on climate and environmental data, relies extensively on the [Climate and Forecast (CF) Conventions](http://cfconventions.org). The CF Conventions are probably the most popular in climate science (it underpins the modelling effort of the IPCC). A detailed description of the latest release of the CF Conventions for netCDF can be found [here](http://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html). \\n\\nThe CF Conventions were designed specifically for the netCDF format but they can be applied widely. The netCDF format enables creation of self-describing datasets by design. CF Conventions aim to ensure that  files contain sufficient metadata that they are self-describing in the sense that each variable in the file has an associated description of what it represents, including physical units if appropriate, and that each value can be located in space (relative to earth-based coordinates) and time. (Absence of such information in early (historical) datasets has hindered climate change science for decades - how does one measure change, if one cannot locate the observations in time and space?)\\n\\nOne example of CF Conventions is to provide a list of **standard_names** for certain commonly-used variables. The [CF standard name table] (http://cfconventions.org/Data/cf-standard-names/current/build/cf-standard-name-table.html) will show what the names are and describe what they represent. \\n\\nTo illustrate, imagine you work with data at the earth surface and label your variable 'temperature'. What did you mean exactly? Surface temperature of the ocean/land, or air temperature? etc. CF conventions ensure that climate scientists name common variables in the same way. \\n\\nA [python package](https://pypi.org/project/cfunits/) called `cfunits` provides an interface to the CF Convention. This is useful to combine and compare variables and convert various units. By relying on a package, fewer user-errors are made.   \\n\\nThe CF Conventions are not fixed, they are evolving depending on needs and scientific progress. Although conventions are decided by a committee of experts, anyone can propose a change to the convention by engaging in the [discussion forum](https://cfconventions.org/discussion.html).\\n\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 10}}, {'id': 1753901957112878, 'score': 0.68368536, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_0', 'type': 'pdf', 'content': 'https://svs.gsfc.nasa.gov/30701Climate data and modelsEDSML MSc –Imperial College London –Environmental dataYves Plancherel-https://www.linkedin.com/in/yves-plancherel/\\nWhy discuss climate data and climate models?\\n1. Understand common data format and databasestructures specific to representative fields of environmental science2. Demonstrate technical competency in handling common data types routinely encountered in the environmental sciences and identify relevant open-source data repositories3. ', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 0}}, {'id': 1753903424509295, 'score': 0.68005794, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_1_md', 'type': 'markdown', 'content': \"---\\n\\n# 01- Introduction to climate data and climate models\\n\\n---\\n\\n<a id='Contents'></a>\\n## Contents\\n- [Lectures](#lectures)\\n- [Question](#question)\\n- [ESMValTool](#ESMValTool)\\n- [Sources of climate data](#climatedata)\\n- [CEDA](#CEDA)\\n- [File formats](#fileformat)\\n- [Metadata](#metadata)\\n- [NetCDF](#NetCDF)\\n- [NCO](#NCO)\\n- [Reanalysis products](#reanalysis)\\n- [Climate services UKCP18](#ukcp18)\\n  \\n## Learning outcomes\\n1. Understand the basics of climate modelling\\n2. Know where to find and how to access climate data (ESGF, CEDA)\\n3. Understand common file formats\\n4. Understand the importance of metadata and understand CF conventions\\n5. Understand the NetCDF file format and know how to read, create and maniputate NetCDF data\\n6. Become familiar with other key tools used to manipulate netCDF data (NCO, CDO)\\n7. Know how to access ERA5 reanalysis products\\n8. Climate Services and UKCP18 and ability to access that data\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 1}}, {'id': 1753903424959234, 'score': 0.67808944, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_9_md', 'type': 'markdown', 'content': '<a id=\\'Metadata\\'></a>\\n\\n## The importance of Metadata\\n[Metadata](https://help.ceda.ac.uk/article/4428-metadata-basics) **relate to all the information necessary to interpret, understand and use a given dataset. Metadata are not the data themselves, but are required to provide context and therefore inform the data analysis.** \\n\\nThere are two types of metadata, \"**discover metadata**\", which can be used to locate the dataset in a search, and \"**detailed metadata**\", which contain the information necessary to use the data (ideally) without having to ask the data provider for more information (even if one of the key piece of information should be the data provider information and contact detail!).\\n\\nThere is no upper limit as to what information should be included in the metadata, but typical metadata comprise information about when and where the observations, or the file, where produced, how they were produced (which instrument, technique, algorithm were used), information about the experiment the data come from, maybe some information about data accuracy (if not provided as seperate data in the file), information about who produced the data or the file, including contact information, or appropriate reference(s), and, if relevant, additional information about the research context, i.e. which project is associated with these data (this could help the user understand if more data from this group/project exist or can be expected). If the data represent a subset of a larger dataset, this should also be mentioned. \\n\\nAnother key pieces of information that the metadata should provide are a description of the variables in the file, with variable **names**, and the **units** of these variables. \\n\\nIf the data in the file represent a processed version of other raw data, then one should add information about these raw data as well, their provenance, references, and the transformation that was made, etc. One should be able to track the chain of information all the way to the orginal observations (or model output). \\n\\nIf the data represent gridded variables, then the nature of the grid on which these data are defined should also be explained. \\n\\nSimilarly, if the position, or some other features of the data, depend on a reference system, that reference system should be given. This will be discussed in more depth during the introduction to geostatistics lecture. \\n\\nIn the case of climate models (or other models, if relevant), the metadata should also include information about the model itself, the model name, version, the length of the integration, maybe a brief description of the spin-up, boundary conditions, initial conditions used to produce the simulation. \\n\\nObviously the information that will be included in the metadata vary substantially. You should learn (and will discover - mostly through shear frustration when key information is missing!) what constitute useful metadata in your field of work. \\n\\nMetadata can be included in the file itself (if the file format allows it), as separate files, or in the form of some other documents. When sourcing data, always make a note of where the data come from. This is especially true if getting data online as it is very easy to download data and then forget where they come from. Detailed note-taking is part of the job of the data analyst (and that of any scientist!). \\n\\nWhen metadata is included in the file directly, this typically comes as a header, or in a specified location in the file. The netCDF format has rules for how/where to include metadata, which is one of the reason why netCDF data are particularly useful and popular in climate science. \\n\\n\\n[back to contents](#Contents)\\n\\n---', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 9}}, {'id': 1753903424142956, 'score': 0.6706521, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_4_md', 'type': 'markdown', 'content': \"<a id='ESMValTool'></a>\\n\\n# Python environments to consider for working with climate data \\n\\n* ## Earth System Model Evaluation Tool (ESMValTool)\\n![esmvaltool](img/ESMValTool-logo-2.png)\\n\\nThis week, it should be possible to simply install packages as needed...\\n\\nHowever, if you anticipate possible future needs, you may want to invest a bit of effort to setup a specific python environment to work with climate data. If so, a good place to start is the `ESMValTool` project. \\n\\n\\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) is  a community-led, open source, set of software tools (build on python 3) developed to improve diagnosing and understanding climate models. While the focus has been on climate models, not observations, one cannot quantify model biases without also comparing the model results with observations. [ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) therefore also has some capability to analyze and manipulate large datasets. \\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) can work offline, but as the amount of climate data is so large, it is mostly designed to work with data centers that provide local access to the vast amount of data. One such initiative is the Earth System Grid Federation ([ESGF](https://esgf.llnl.gov)). ESMValTool provides functionality to work on HPC systems.\\n\\nWe will not use ESMValTool here specifically, but it will install other convenient tools and you may be curious to investigate ESMValTool capabilities on your own anyways. It is now used routinely for climate modelling research. \\n\\nAdditional information and help can be found at https://www.esmvaltoolorg, and on the [ESMValGroup](https://github.com/ESMValGroup) github page. The [ESMValTool tutorial](https://esmvalgroup.github.io/ESMValTool_Tutorial/) is a great resource to get started. \\n\\n\\n### OPTIONAL: Installing ESMValTool (NB: this often fails for students - installing this is not required for the course)\\n[Installation instructions](https://docs.esmvaltool.org/en/latest/quickstart/installation.html) differ by operating system and it is very much an experimental, in development, tool - keep this in mind! \\n\\n[Notes:ESMValTool 2.0 requires a Unix(-like) operating system and Python 3.7+. (Python 3.7, 3.8 and 3.9 are supported). On my laptop (Macbook pro 13'' M1 2020 with OS Monterey 12.0.1), I installed it in Nov 2021 with Python 3.9.7. ...but I installed it when 'conda' was still an installation option. ESMValTool developer have  changed installation methods to `mamba` recently. Do refer to online/official instructions). You will now be required to also [install `mamba`](https://docs.esmvaltool.org/en/latest/quickstart/installation.html#mamba-installation) first (...yet another package/dependency manager).] \\n\\nESMValTool can also work with Julia, R, NCL. Do check installation instructions for these extensions. \\n\\n[back to contents](##Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 4}}, {'id': 1753903424228032, 'score': 0.6685139, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_43_md', 'type': 'markdown', 'content': '### The CDS Toolbox\\n\\nAn extention to the CDS API is the [CDS Toolbox](https://cds.climate.copernicus.eu/toolbox/doc/index.html). The Toolbox is a programming interface. It is free and available to everyone. It links raw data to an online computing facility, thereby removing the computing barrier for users worldwide. The Toolbox allows users to develop python scripts for the CDS and to run them online. The users than then simply download the maps, graph or secondary data without needing to incur the costs associated with storing and maintaining the large climate data archive locally, nor is it required to invest in a powerful computer. \\n\\n\\nThe Toolbox works hand-in-hand with the CDS API. \\n\\nThat is, one can issue commmands to the Toolbox via the CDS API, or develop a python script that does certain things, and then use the CDS API functionality to send it to CDS for evaluation, only to download the finished product locally. \\n\\nExamples of how to proceed are given [here](https://confluence.ecmwf.int/display/COPSRV/Call+a+service+with+the+CDS+API). \\n\\nNote, it is also possible to use the CDS Toolbox to plot data from other services (i.e. not originally stored on CDS), using the `remote` function instead of the `service` function. This is possible thanks to protocols such as OPeNDAP. Here is an example using data from UNIDATA. \\n\\nFor illustration of how the Toolbox can be used, the following piece of code, run locally, after the CDS API is properly configured and assuming one is connected to the internet, will produce, and then download to our `output/` directory, a map of global temperature on January 1st 2021 at 14:00.', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 43}}, {'id': 1753903424357433, 'score': 0.66608703, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_5_md', 'type': 'markdown', 'content': \"<a id='climatedata'></a>\\n\\n# Working with climate data and climate models\\n\\n### Earth System Grid Federation (ESGF)\\n\\n![esgf](img/ESGF_logo.png)\\n\\n\\n[ESGF](https://esgf.llnl.gov) is an open-source platform that provides distributed access to peta/exa-scale scientific data, **globally**. \\n\\nIt is an interagency and international effort led by the US Department of Energy (DOE), co-funded by National Aeronautics and Space Administration (NASA), National Oceanic and Atmospheric Administration (NOAA), the US National Science Foundation (NSF), and other international partners, such as the Max Planck Institute for Meteorology (MPI-M) German Climate Computing Centre (DKRZ), the Australian National University (ANU) National Computational Infrastructure (NCI), Institut Pierre-Simon Laplace (IPSL), and the **Centre for Environmental Data Analysis ([CEDA](https://www.ceda.ac.uk))** in the UK.\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 5}}, {'id': 1753902702944729, 'score': 0.6641873, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_9', 'type': 'pdf', 'content': 'task. It requires understanding the model well and the data well–A trend towards “Observational System Simulation Experiments” (OSSE)–data assimilation (e.g.4DVAR)\\nThe role of observationsin modeling\\nhttp://www.climate.be/textbook/pdf/Chapter_3.pdf\\nModelsvs observations•There are data that are ’just’ observations•There are models that are ‘just’ models•There are models that are ‘assimilated with data’–Often called ‘Reanalysis Products’•(also used in weather forecasting, obviously)–These are mode', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 9}}, {'id': 1753901956917450, 'score': 0.6625167, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_3', 'type': 'pdf', 'content': ' technology options)\\n\\nUsing climate models: variability(temporal, spatial)\\nImportance of experimental design!Control+ experiment\\nUsing climate models: uncertainties and sensitivities\\nMIP = Model Intercomparison Project\\nEyring et al. 2016\\nUsing climate models: uncertainties and sensitivities\\nhttps://en.wikipedia.org/wiki/Climate_ensembleDifferent experimentswith many ensembles!Each one trying to account for sensitivity due to a source of error Real world data: we only have one Earth, ONE realizat', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 3}}, {'id': 1753903424143550, 'score': 0.66216743, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_11_md', 'type': 'markdown', 'content': \"<a id='NetCDF'></a>\\n\\n## Network Common Data Form (NetCDF)\\n\\n[NetCDF](https://www.unidata.ucar.edu/software/netcdf/) is one of the most common data format used to store climate data. NetCDF files allow the user to insert metadata in the data file by design, ensuring the data file is self-describing (amongst other properties).\\n\\n*NetCDF is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data.* \\n\\nThe netCDF format, which is a type of HDF format, is attractive because it is:\\n\\n* Self-Describing. A netCDF file includes information about the data it contains and metadata.\\n* Portable. A netCDF file can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.\\n* Scalable. Small subsets of large datasets in various formats may be accessed efficiently through netCDF interfaces, even from remote servers.\\n* Appendable. Data may be appended to a properly structured netCDF file without copying the dataset or redefining its structure.\\n* Sharable. One writer and multiple readers may simultaneously access the same netCDF file.\\n* Archivable. Access to all earlier forms of netCDF data will be supported by current and future versions of the software.\\n\\n\\nThe NetCDF project is maintained by the Unidata program at the University Corporation for Atmospheric Research ([UCAR](https://www.ucar.edu)). [UCAR](https://www.ucar.edu) also manages [NCAR](https://ncar.ucar.edu), one of the first center to have developped climate models and is today one of the gold-standard on the topic. \\n\\nNCAR also developed [NCL](https://www.ncl.ucar.edu), an interpreted programming language designed specifically for scientific data analysis and visualization (we will not use NCL here, but the python package `ESMValTool` has build-in support for it). \\n\\n[NCAR](https://ncar.ucar.edu) has also developped the [climate data guide](https://climatedataguide.ucar.edu), a tool to search and access >200 data sets specific to the ocean, land and the atmosphere. (Some of these data may or may not also be found on CEDA.) \\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 11}}, {'id': 1753901956989969, 'score': 0.6564437, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_2', 'type': 'pdf', 'content': ' as well as errors stemming from the analytical procedure itself (e.g.calibration of analysis using synthetic data/models).Learning objectives of the Environmental Data module•Growing/important field –with likely career opportunities•Great playground to deliver learning objectives\\nUsing climate models: quantification/forecasting(impacts, adaptation, mitigation)\\nhttps://www.noaa.gov/education/resource-collections/climate/climate-change-impacts\\nUsing climate models: designscenarios(explore policy,', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 2}}, {'id': 1753902300429530, 'score': 0.6553674, 'payload': {'original_id': 'uploads\\\\02v1_Building_climate_models_copy.pdf_chunk_6', 'type': 'pdf', 'content': 'ce scales of interest–Integration time step–Spatial resolution of the grid–Duration of model run–Decisions about time/space scales also translate into “filtering” the equations •(parts of the equations can be neglected and the equations simplified –some physics can be neglected/simplified)\\nWhy model climate?\\n\\nWeather and climate –bridging the gap\\n\\n\\nWhat are coupledclimatemodels?\\n\\nA few key major coupling mechanisms between the ocean and the atmosphere\\nThe “coupler” is the heart of climate models', 'source_document': 'uploads\\\\02v1_Building_climate_models_copy.pdf', 'chunk_number': 6}}, {'id': 1753902702794239, 'score': 0.6538763, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_8', 'type': 'pdf', 'content': 'cool and warm the climateThe microphysics responsible for cloud formation is not well understoodThe grid cells in models are much much bigger than time/space scales relevant for cloud physicsÞMagnitude/location of rain events is hard to predict wellÞThat information is useful though!\\nComparing models with data•What is a data point? Observation vs model result•Are model solutions at a point similar toa data point (i.e.observational sample)?–Spatially?–Temporally?•Using data well is not a trivial ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 8}}, {'id': 1753903424368210, 'score': 0.6480979, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_2_md', 'type': 'markdown', 'content': \"<a id='lectures'></a>\\n# Lecture on relevance of climate science, climate models and climate modelling\\n\\n\\n(see Powerpoint presentations)\\n\\n1. 01v1_Why_climate_data.pptx/pdf\\n2. 02v1_Building_climate_models.pptx/pdf\\n3. 03v1_Common_issues.pptx/pdf\\n   \\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 2}}, {'id': 1753903424804905, 'score': 0.64712024, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_42_code', 'type': 'code', 'content': \"#!/usr/bin/env python\\nimport cdsapi\\n \\nc = cdsapi.Client()\\n \\nc.retrieve(\\n    'reanalysis-era5-pressure-levels',\\n    {\\n        'product_type': 'reanalysis',\\n        'variable': 'temperature',\\n        'pressure_level': '1000',\\n        'year': '2021',\\n        'month': '01',\\n        'day': '01',\\n        'time': '12:00',\\n        'format': 'netcdf',                         # NetCDF\\n        'area'          : [60., -11., 34., 35.],    # Default area is global; provide [North, West, South, East] limits to select an area (here selecting Europe)\\n        'grid'          : [1.0, 1.0],               #  Default atmospheric resolution is 0.25 x 0.25; provie [Latitude/longitude] grid resolution to interpolate data to something else.           \\n    },\\n    'output/ERAtest_subarea_1deg1deg.nc')           # Output file. Adapt as you wish.\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 42}}, {'id': 1753903424262111, 'score': 0.6432742, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_38_md', 'type': 'markdown', 'content': \"<a id='reanalysis'></a>\\n\\n# Reanalysis products\\n\\n![C3S](img/c3s-logo.png)\\n![ECMWF](img/logo-ecmwf.png) \\n\\n[*ERA5 provides hourly estimates of a large number of atmospheric, land and oceanic climate variables. The data cover the Earth on a 30km grid and resolve the atmosphere using 137 levels from the surface up to a height of 80km. ERA5 includes information about uncertainties for all variables at reduced spatial and temporal resolutions.Quality-assured monthly updates of ERA5 (1979 to present) are published within 3 months of real time. Preliminary daily updates of the dataset are available to users within 5 days of real time.*](https://www.ecmwf.int/en/forecasts/datasets/reanalysis-datasets/era5)\\n\\n[ERA5](https://confluence.ecmwf.int/display/CKB/ERA5) is a [family of datasets](https://confluence.ecmwf.int/display/CKB/The+family+of+ERA5+datasets). It currently comprises ERA5, ERA5.1 and ERA5-Land. ERA5 is the fifth generation ECMWF atmospheric reanalysis of the global climate covering the period from January 1950 to present. ERA5 is produced by the Copernicus Climate Change Service ([C3S](https://confluence.ecmwf.int/pages/viewpage.action?pageId=151530614)) at the European Center for Medium-Range Weather Forecasts ([ECMWF](https://www.ecmwf.int)) and made available via the [Climate Change Service](https://climate.copernicus.eu). \\n\\nImportantly, ERA5 is a [**reanalysis product**](https://www.youtube.com/watch?v=FAGobvUGl24), meaning a **model that assimilates data**. A model of the climate (weather) is run, and adjusted (following certain laws of physics and constraints) to fit [as many observations](https://confluence.ecmwf.int/display/CKB/ERA5%3A+data+documentation#ERA5:datadocumentation-Observations) as possible using a technique called 4D-var. One must realize that, even if assimimated prodcuts such as ERA5 are often used 'in lieu' of observations, they are **\\\\*not\\\\*** observations: they are a model product, but a product that is made to look as much like the data as possible given computational, mathematical, physical limitations of the model. \\n\\nERA5 is one of various [reanalysis products](https://reanalyses.org) available globally. Another well-known produce is the [NCEP/NCAR Reanalysis product](https://en.wikipedia.org/wiki/NCEP/NCAR_Reanalysis). [MERRA-2](https://gmao.gsfc.nasa.gov/reanalysis/MERRA-2/), produced by NASA, is another. \\n\\nThe article by [Hersbach et al. 2020](https://rmets.onlinelibrary.wiley.com/doi/10.1002/qj.3803) discusses the ERA global Reanalysis prodcuct in more detail.\\n\\nWhile observations are only available in specific locations and at specific times, the reanalysis product provides a clever way to dynamically interpolate between these observations. ERA5 also comes as a gridded product, making it very convenient to use. In the model-world, one can access a complete/global picture every time-step, with a spatial resolution as high as computational limits allow. I re-emphasize that this is not the same as observations! ... but it is as close to observations as we can get if one is trying to work with a spatially and temporall interpolated product. \\n\\n**Grid geometry depends on data format**: Note that the grid geometry of the output data of ERA5 [depends on the format the data that are being downloaded](https://confluence.ecmwf.int/display/CKB/ERA5%3A+What+is+the+spatial+reference). Native GRIB format data are delivered on the model's native grid geometry (this is not a regular lat/lon grid!). On the other hand, data in NetCDF format are automatically interpolated and regridded to a regular lat/lon grid. While this is not very important for most application, one must remember that interpolated data in the NetCDF files are not the same as the original model output and this could have implication for the conservation properties of some variables. It can be easier/convenient to work with data interpolated on a regular lat/lon grid, however.  \\n\\n**Grid definition and wrap-around**: The gridded ERA5 archive is provided on a [-90;+90] latitude grid and a [0;+360] longitude grid, with decimal degrees, referenced to the Greenwich Prime Meridian. While latitude is generally not an issue, care must be taken when working with longitude as one must remember that 0 and 360 are the same point. One must account for the wrap-around issue: although the first column and last column of a datasets on the [0;+360] grid are far away from each other in terms of index, these points are geographically very close. Some software can automatically deal with this wrap-around and convert to [-180;+180] or other system as required, but this should not be taken for granted. \\n\\n\\n[back to contents](#Contents)\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 38}}, {'id': 1753901956993712, 'score': 0.64243263, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_4', 'type': 'pdf', 'content': 'ionModel data: we do what the @#$ we want J!•…as long aswe can calculate it and analyze it•… and are aware of model flaws!\\nUsing climate models: attributionhttps://www.worldweatherattribution.org\\nhttps://www.swissre.com/media/news-releases/nr-20191219-global-catastrophes-estimate.htmlWhose faultis it?Who pays for it?Catastrophe-related insured losses (1970-2019)\\n\\nClimate extremes and climate risk•Magnitude•Frequency•Duration•Spatial extent•Whatvariable?–T, Precipitation, winds, sea level, etc.•H', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 4}}, {'id': 1753903424963171, 'score': 0.6413569, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_33_md', 'type': 'markdown', 'content': '**Masks**: `Masks` are often used in climate science data to separate data from different regions (e.g. ocean vs land, etc.). By default, the python NetCDF4 API returns numpy arrays that mask entries that equal the `missing_value` or `_FillValue` attribute. One can force unmasking (i.e. return all values, regardless) using the `Dataset.set_auto_mask` method. To switch back auto-masking, use `Dataset.set_always_mask`. When writing a masked array to a variable in a netcdf file (i.e. an array with missing data), the masked elements are filled with the value that is defined in the `missing_value` attribute that was defined when creating the netcdf fie. ', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 33}}, {'id': 1753902702662417, 'score': 0.6361211, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_10', 'type': 'pdf', 'content': 'ls that are ‘fitted’ to data•Some model parameters are tuned to fit–Question is what to fit/how? (Data assimilation, 4DVAR)–Provide best gridded high-resolution spatio-temporal product available … but:•they are still model results–Fitting a bad/wrong model still is a bad results•they only exist for the period when data exist–so cannot be used for forecasting–But extremely useful to understand past/current climate patterns/variability\\nAre models ever “right”?•Since models are incomplete by constr', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 10}}, {'id': 1753903424623019, 'score': 0.6287289, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_37_md', 'type': 'markdown', 'content': \"### Climate Data Operators (CDO)\\nThe Climate Data Operators ([CDO](https://code.mpimet.mpg.de/projects/cdo)) software is a collection of >600 operators for standard processing of climate and forecast model data. They are slighly less memory/speed efficient than NCO, but they do more (>600 vs 12!). CDO support the main data formats used in the field, such as GRIB and netCDF. \\n\\nThey too can be daisy-chained for specific applications. There are [many recipes available](https://code.mpimet.mpg.de/projects/cdo/embedded/cdo_eca.pdf) to calculate various climate indices and diagnostics, what makes them very attractive to evaluate gridded climate data or climate model output.\\n\\nThe [CDO user guide](https://code.mpimet.mpg.de/projects/cdo/embedded/index.html) provides details instructions and examples. \\n\\n[They are also very useful, but we don't have time to discuss them in detail here. You are encouraged to practice with CDO on your own time]\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 37}}]",
      "[{'id': 1753903424143550, 'score': 0.75241756, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_11_md', 'type': 'markdown', 'content': \"<a id='NetCDF'></a>\\n\\n## Network Common Data Form (NetCDF)\\n\\n[NetCDF](https://www.unidata.ucar.edu/software/netcdf/) is one of the most common data format used to store climate data. NetCDF files allow the user to insert metadata in the data file by design, ensuring the data file is self-describing (amongst other properties).\\n\\n*NetCDF is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data.* \\n\\nThe netCDF format, which is a type of HDF format, is attractive because it is:\\n\\n* Self-Describing. A netCDF file includes information about the data it contains and metadata.\\n* Portable. A netCDF file can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.\\n* Scalable. Small subsets of large datasets in various formats may be accessed efficiently through netCDF interfaces, even from remote servers.\\n* Appendable. Data may be appended to a properly structured netCDF file without copying the dataset or redefining its structure.\\n* Sharable. One writer and multiple readers may simultaneously access the same netCDF file.\\n* Archivable. Access to all earlier forms of netCDF data will be supported by current and future versions of the software.\\n\\n\\nThe NetCDF project is maintained by the Unidata program at the University Corporation for Atmospheric Research ([UCAR](https://www.ucar.edu)). [UCAR](https://www.ucar.edu) also manages [NCAR](https://ncar.ucar.edu), one of the first center to have developped climate models and is today one of the gold-standard on the topic. \\n\\nNCAR also developed [NCL](https://www.ncl.ucar.edu), an interpreted programming language designed specifically for scientific data analysis and visualization (we will not use NCL here, but the python package `ESMValTool` has build-in support for it). \\n\\n[NCAR](https://ncar.ucar.edu) has also developped the [climate data guide](https://climatedataguide.ucar.edu), a tool to search and access >200 data sets specific to the ocean, land and the atmosphere. (Some of these data may or may not also be found on CEDA.) \\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 11}}, {'id': 1753901957112878, 'score': 0.7321639, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_0', 'type': 'pdf', 'content': 'https://svs.gsfc.nasa.gov/30701Climate data and modelsEDSML MSc –Imperial College London –Environmental dataYves Plancherel-https://www.linkedin.com/in/yves-plancherel/\\nWhy discuss climate data and climate models?\\n1. Understand common data format and databasestructures specific to representative fields of environmental science2. Demonstrate technical competency in handling common data types routinely encountered in the environmental sciences and identify relevant open-source data repositories3. ', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 0}}, {'id': 1753903424509295, 'score': 0.7289186, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_1_md', 'type': 'markdown', 'content': \"---\\n\\n# 01- Introduction to climate data and climate models\\n\\n---\\n\\n<a id='Contents'></a>\\n## Contents\\n- [Lectures](#lectures)\\n- [Question](#question)\\n- [ESMValTool](#ESMValTool)\\n- [Sources of climate data](#climatedata)\\n- [CEDA](#CEDA)\\n- [File formats](#fileformat)\\n- [Metadata](#metadata)\\n- [NetCDF](#NetCDF)\\n- [NCO](#NCO)\\n- [Reanalysis products](#reanalysis)\\n- [Climate services UKCP18](#ukcp18)\\n  \\n## Learning outcomes\\n1. Understand the basics of climate modelling\\n2. Know where to find and how to access climate data (ESGF, CEDA)\\n3. Understand common file formats\\n4. Understand the importance of metadata and understand CF conventions\\n5. Understand the NetCDF file format and know how to read, create and maniputate NetCDF data\\n6. Become familiar with other key tools used to manipulate netCDF data (NCO, CDO)\\n7. Know how to access ERA5 reanalysis products\\n8. Climate Services and UKCP18 and ability to access that data\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 1}}, {'id': 1753903424243022, 'score': 0.7284456, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_10_md', 'type': 'markdown', 'content': \" * ### The Climate and Forecast (CF) Metadata Conventions (prominent in climate science)\\n \\nGiven the amount of data produced keeps increasing, data libraries are being developed. As in any library, certain sets of rules are required so that the data can be found later. Metadata are obviously a good way to ensure data can be catalogued and found by various search systems.\\n\\nMultiple types of conventions exist (see for example this [list of netCDF conventions from Unidata](https://www.unidata.ucar.edu/software/netcdf/conventions.html)). Ensuring that data files are produced in a way that follows conventions about content, vocabulary used and layout, allows for batch processing, easy extraction and automation! It is extremely useful (but should not prevent innovation).\\n\\nCEDA, as it focuses on climate and environmental data, relies extensively on the [Climate and Forecast (CF) Conventions](http://cfconventions.org). The CF Conventions are probably the most popular in climate science (it underpins the modelling effort of the IPCC). A detailed description of the latest release of the CF Conventions for netCDF can be found [here](http://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html). \\n\\nThe CF Conventions were designed specifically for the netCDF format but they can be applied widely. The netCDF format enables creation of self-describing datasets by design. CF Conventions aim to ensure that  files contain sufficient metadata that they are self-describing in the sense that each variable in the file has an associated description of what it represents, including physical units if appropriate, and that each value can be located in space (relative to earth-based coordinates) and time. (Absence of such information in early (historical) datasets has hindered climate change science for decades - how does one measure change, if one cannot locate the observations in time and space?)\\n\\nOne example of CF Conventions is to provide a list of **standard_names** for certain commonly-used variables. The [CF standard name table] (http://cfconventions.org/Data/cf-standard-names/current/build/cf-standard-name-table.html) will show what the names are and describe what they represent. \\n\\nTo illustrate, imagine you work with data at the earth surface and label your variable 'temperature'. What did you mean exactly? Surface temperature of the ocean/land, or air temperature? etc. CF conventions ensure that climate scientists name common variables in the same way. \\n\\nA [python package](https://pypi.org/project/cfunits/) called `cfunits` provides an interface to the CF Convention. This is useful to combine and compare variables and convert various units. By relying on a package, fewer user-errors are made.   \\n\\nThe CF Conventions are not fixed, they are evolving depending on needs and scientific progress. Although conventions are decided by a committee of experts, anyone can propose a change to the convention by engaging in the [discussion forum](https://cfconventions.org/discussion.html).\\n\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 10}}, {'id': 1753903424959234, 'score': 0.711558, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_9_md', 'type': 'markdown', 'content': '<a id=\\'Metadata\\'></a>\\n\\n## The importance of Metadata\\n[Metadata](https://help.ceda.ac.uk/article/4428-metadata-basics) **relate to all the information necessary to interpret, understand and use a given dataset. Metadata are not the data themselves, but are required to provide context and therefore inform the data analysis.** \\n\\nThere are two types of metadata, \"**discover metadata**\", which can be used to locate the dataset in a search, and \"**detailed metadata**\", which contain the information necessary to use the data (ideally) without having to ask the data provider for more information (even if one of the key piece of information should be the data provider information and contact detail!).\\n\\nThere is no upper limit as to what information should be included in the metadata, but typical metadata comprise information about when and where the observations, or the file, where produced, how they were produced (which instrument, technique, algorithm were used), information about the experiment the data come from, maybe some information about data accuracy (if not provided as seperate data in the file), information about who produced the data or the file, including contact information, or appropriate reference(s), and, if relevant, additional information about the research context, i.e. which project is associated with these data (this could help the user understand if more data from this group/project exist or can be expected). If the data represent a subset of a larger dataset, this should also be mentioned. \\n\\nAnother key pieces of information that the metadata should provide are a description of the variables in the file, with variable **names**, and the **units** of these variables. \\n\\nIf the data in the file represent a processed version of other raw data, then one should add information about these raw data as well, their provenance, references, and the transformation that was made, etc. One should be able to track the chain of information all the way to the orginal observations (or model output). \\n\\nIf the data represent gridded variables, then the nature of the grid on which these data are defined should also be explained. \\n\\nSimilarly, if the position, or some other features of the data, depend on a reference system, that reference system should be given. This will be discussed in more depth during the introduction to geostatistics lecture. \\n\\nIn the case of climate models (or other models, if relevant), the metadata should also include information about the model itself, the model name, version, the length of the integration, maybe a brief description of the spin-up, boundary conditions, initial conditions used to produce the simulation. \\n\\nObviously the information that will be included in the metadata vary substantially. You should learn (and will discover - mostly through shear frustration when key information is missing!) what constitute useful metadata in your field of work. \\n\\nMetadata can be included in the file itself (if the file format allows it), as separate files, or in the form of some other documents. When sourcing data, always make a note of where the data come from. This is especially true if getting data online as it is very easy to download data and then forget where they come from. Detailed note-taking is part of the job of the data analyst (and that of any scientist!). \\n\\nWhen metadata is included in the file directly, this typically comes as a header, or in a specified location in the file. The netCDF format has rules for how/where to include metadata, which is one of the reason why netCDF data are particularly useful and popular in climate science. \\n\\n\\n[back to contents](#Contents)\\n\\n---', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 9}}, {'id': 1753903424368210, 'score': 0.6976022, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_2_md', 'type': 'markdown', 'content': \"<a id='lectures'></a>\\n# Lecture on relevance of climate science, climate models and climate modelling\\n\\n\\n(see Powerpoint presentations)\\n\\n1. 01v1_Why_climate_data.pptx/pdf\\n2. 02v1_Building_climate_models.pptx/pdf\\n3. 03v1_Common_issues.pptx/pdf\\n   \\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 2}}, {'id': 1753903424623019, 'score': 0.6919143, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_37_md', 'type': 'markdown', 'content': \"### Climate Data Operators (CDO)\\nThe Climate Data Operators ([CDO](https://code.mpimet.mpg.de/projects/cdo)) software is a collection of >600 operators for standard processing of climate and forecast model data. They are slighly less memory/speed efficient than NCO, but they do more (>600 vs 12!). CDO support the main data formats used in the field, such as GRIB and netCDF. \\n\\nThey too can be daisy-chained for specific applications. There are [many recipes available](https://code.mpimet.mpg.de/projects/cdo/embedded/cdo_eca.pdf) to calculate various climate indices and diagnostics, what makes them very attractive to evaluate gridded climate data or climate model output.\\n\\nThe [CDO user guide](https://code.mpimet.mpg.de/projects/cdo/embedded/index.html) provides details instructions and examples. \\n\\n[They are also very useful, but we don't have time to discuss them in detail here. You are encouraged to practice with CDO on your own time]\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 37}}, {'id': 1753903424357433, 'score': 0.69008124, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_5_md', 'type': 'markdown', 'content': \"<a id='climatedata'></a>\\n\\n# Working with climate data and climate models\\n\\n### Earth System Grid Federation (ESGF)\\n\\n![esgf](img/ESGF_logo.png)\\n\\n\\n[ESGF](https://esgf.llnl.gov) is an open-source platform that provides distributed access to peta/exa-scale scientific data, **globally**. \\n\\nIt is an interagency and international effort led by the US Department of Energy (DOE), co-funded by National Aeronautics and Space Administration (NASA), National Oceanic and Atmospheric Administration (NOAA), the US National Science Foundation (NSF), and other international partners, such as the Max Planck Institute for Meteorology (MPI-M) German Climate Computing Centre (DKRZ), the Australian National University (ANU) National Computational Infrastructure (NCI), Institut Pierre-Simon Laplace (IPSL), and the **Centre for Environmental Data Analysis ([CEDA](https://www.ceda.ac.uk))** in the UK.\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 5}}, {'id': 1753901956989969, 'score': 0.6849489, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_2', 'type': 'pdf', 'content': ' as well as errors stemming from the analytical procedure itself (e.g.calibration of analysis using synthetic data/models).Learning objectives of the Environmental Data module•Growing/important field –with likely career opportunities•Great playground to deliver learning objectives\\nUsing climate models: quantification/forecasting(impacts, adaptation, mitigation)\\nhttps://www.noaa.gov/education/resource-collections/climate/climate-change-impacts\\nUsing climate models: designscenarios(explore policy,', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 2}}, {'id': 1753903424142956, 'score': 0.6845455, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_4_md', 'type': 'markdown', 'content': \"<a id='ESMValTool'></a>\\n\\n# Python environments to consider for working with climate data \\n\\n* ## Earth System Model Evaluation Tool (ESMValTool)\\n![esmvaltool](img/ESMValTool-logo-2.png)\\n\\nThis week, it should be possible to simply install packages as needed...\\n\\nHowever, if you anticipate possible future needs, you may want to invest a bit of effort to setup a specific python environment to work with climate data. If so, a good place to start is the `ESMValTool` project. \\n\\n\\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) is  a community-led, open source, set of software tools (build on python 3) developed to improve diagnosing and understanding climate models. While the focus has been on climate models, not observations, one cannot quantify model biases without also comparing the model results with observations. [ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) therefore also has some capability to analyze and manipulate large datasets. \\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) can work offline, but as the amount of climate data is so large, it is mostly designed to work with data centers that provide local access to the vast amount of data. One such initiative is the Earth System Grid Federation ([ESGF](https://esgf.llnl.gov)). ESMValTool provides functionality to work on HPC systems.\\n\\nWe will not use ESMValTool here specifically, but it will install other convenient tools and you may be curious to investigate ESMValTool capabilities on your own anyways. It is now used routinely for climate modelling research. \\n\\nAdditional information and help can be found at https://www.esmvaltoolorg, and on the [ESMValGroup](https://github.com/ESMValGroup) github page. The [ESMValTool tutorial](https://esmvalgroup.github.io/ESMValTool_Tutorial/) is a great resource to get started. \\n\\n\\n### OPTIONAL: Installing ESMValTool (NB: this often fails for students - installing this is not required for the course)\\n[Installation instructions](https://docs.esmvaltool.org/en/latest/quickstart/installation.html) differ by operating system and it is very much an experimental, in development, tool - keep this in mind! \\n\\n[Notes:ESMValTool 2.0 requires a Unix(-like) operating system and Python 3.7+. (Python 3.7, 3.8 and 3.9 are supported). On my laptop (Macbook pro 13'' M1 2020 with OS Monterey 12.0.1), I installed it in Nov 2021 with Python 3.9.7. ...but I installed it when 'conda' was still an installation option. ESMValTool developer have  changed installation methods to `mamba` recently. Do refer to online/official instructions). You will now be required to also [install `mamba`](https://docs.esmvaltool.org/en/latest/quickstart/installation.html#mamba-installation) first (...yet another package/dependency manager).] \\n\\nESMValTool can also work with Julia, R, NCL. Do check installation instructions for these extensions. \\n\\n[back to contents](##Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 4}}, {'id': 1753903424703434, 'score': 0.6723295, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_26_md', 'type': 'markdown', 'content': \"- **Attributes**: The last category of information required are 'attributes'. Attributes can be `global' or 'variable'-specific. 'Global' attributes are for the whole Dataset or the group. 'Variable' attributes only inform on a specific variable (or coordinate variable).  \\n\\n`Dataset.ncattrs` can be used to retrieve attributes from a NetCDF file. Alternatively, the `__dict__` attribute of a Dataset, Group or Variable will return the name/value pairs for all the attributes. \\n\\nLet's define some attribute to the time coordinate variable (or dimension):\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 26}}, {'id': 1753903967981470, 'score': 0.67196774, 'payload': {'original_id': 'uploads\\\\intro_to_spatialanalysis.ipynb_cell_0_md', 'type': 'markdown', 'content': \"---\\n\\n# 03 Environmental Data: Thinking spatially\\n\\n---\\n\\n<a id='Contents'></a>\\n* ## Contents\\n- [Spatial data](#spatial)\\n- [Surface interpolation](#surface)\\n- [Gridded data](#gridded)\\n- [Scattered data](#scattered)\\n- [Surface fitting](#fitting)\\n- [Plotting and manipulating spatial data](#plotting)\\n- [Coordinate Reference Systems (CRS)](#crs)\\n- [Geopandas](#geopandas)\\n- [Cartopy](#cartopy)\\n- [A nicer example](#example)\\n  \\n* ## Learning outcomes\\n1. Be able to describe different types of spatial data\\n2. Know functions to perform surface interpolation of gridded and unstructured data\\n3. Understand the concept of surface fitting and how it differs from interpolation\\n4. Understand the overall dependencies of software packages on PROJ and GDAL\\n5. Be able to describe Coordinate Reference Systems (CRS)\\n6. Gain experience with standard plotting tools. \\n\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_spatialanalysis.ipynb', 'cell_number': 0}}, {'id': 1753901956993712, 'score': 0.6706246, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_4', 'type': 'pdf', 'content': 'ionModel data: we do what the @#$ we want J!•…as long aswe can calculate it and analyze it•… and are aware of model flaws!\\nUsing climate models: attributionhttps://www.worldweatherattribution.org\\nhttps://www.swissre.com/media/news-releases/nr-20191219-global-catastrophes-estimate.htmlWhose faultis it?Who pays for it?Catastrophe-related insured losses (1970-2019)\\n\\nClimate extremes and climate risk•Magnitude•Frequency•Duration•Spatial extent•Whatvariable?–T, Precipitation, winds, sea level, etc.•H', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 4}}, {'id': 1753903424963171, 'score': 0.66719353, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_33_md', 'type': 'markdown', 'content': '**Masks**: `Masks` are often used in climate science data to separate data from different regions (e.g. ocean vs land, etc.). By default, the python NetCDF4 API returns numpy arrays that mask entries that equal the `missing_value` or `_FillValue` attribute. One can force unmasking (i.e. return all values, regardless) using the `Dataset.set_auto_mask` method. To switch back auto-masking, use `Dataset.set_always_mask`. When writing a masked array to a variable in a netcdf file (i.e. an array with missing data), the masked elements are filled with the value that is defined in the `missing_value` attribute that was defined when creating the netcdf fie. ', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 33}}, {'id': 1753903424228032, 'score': 0.6667533, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_43_md', 'type': 'markdown', 'content': '### The CDS Toolbox\\n\\nAn extention to the CDS API is the [CDS Toolbox](https://cds.climate.copernicus.eu/toolbox/doc/index.html). The Toolbox is a programming interface. It is free and available to everyone. It links raw data to an online computing facility, thereby removing the computing barrier for users worldwide. The Toolbox allows users to develop python scripts for the CDS and to run them online. The users than then simply download the maps, graph or secondary data without needing to incur the costs associated with storing and maintaining the large climate data archive locally, nor is it required to invest in a powerful computer. \\n\\n\\nThe Toolbox works hand-in-hand with the CDS API. \\n\\nThat is, one can issue commmands to the Toolbox via the CDS API, or develop a python script that does certain things, and then use the CDS API functionality to send it to CDS for evaluation, only to download the finished product locally. \\n\\nExamples of how to proceed are given [here](https://confluence.ecmwf.int/display/COPSRV/Call+a+service+with+the+CDS+API). \\n\\nNote, it is also possible to use the CDS Toolbox to plot data from other services (i.e. not originally stored on CDS), using the `remote` function instead of the `service` function. This is possible thanks to protocols such as OPeNDAP. Here is an example using data from UNIDATA. \\n\\nFor illustration of how the Toolbox can be used, the following piece of code, run locally, after the CDS API is properly configured and assuming one is connected to the internet, will produce, and then download to our `output/` directory, a map of global temperature on January 1st 2021 at 14:00.', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 43}}, {'id': 1753902300206271, 'score': 0.6642698, 'payload': {'original_id': 'uploads\\\\02v1_Building_climate_models_copy.pdf_chunk_0', 'type': 'pdf', 'content': 'Climate models –what are they?\\n…and different grids for different parts of the model:atmosphere, ocean, land, ice,…\\n\\nA bit of review: What do we need to make a model?(Any model, not necessarily a climate one)\\nWhat does a model need?A very simple analytical exampledCdt=λRequires equations (hypotheses about underlying physics)\\nWhat does a model need?A very simple analytical exampledCdt=λdCCoCf∫=λdttotf∫Cf=λtf−to()−CoRequires initial &boundary conditionsRequires equations (hypotheses about underlyi', 'source_document': 'uploads\\\\02v1_Building_climate_models_copy.pdf', 'chunk_number': 0}}, {'id': 1753903424804905, 'score': 0.6610192, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_42_code', 'type': 'code', 'content': \"#!/usr/bin/env python\\nimport cdsapi\\n \\nc = cdsapi.Client()\\n \\nc.retrieve(\\n    'reanalysis-era5-pressure-levels',\\n    {\\n        'product_type': 'reanalysis',\\n        'variable': 'temperature',\\n        'pressure_level': '1000',\\n        'year': '2021',\\n        'month': '01',\\n        'day': '01',\\n        'time': '12:00',\\n        'format': 'netcdf',                         # NetCDF\\n        'area'          : [60., -11., 34., 35.],    # Default area is global; provide [North, West, South, East] limits to select an area (here selecting Europe)\\n        'grid'          : [1.0, 1.0],               #  Default atmospheric resolution is 0.25 x 0.25; provie [Latitude/longitude] grid resolution to interpolate data to something else.           \\n    },\\n    'output/ERAtest_subarea_1deg1deg.nc')           # Output file. Adapt as you wish.\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 42}}, {'id': 1753902702794239, 'score': 0.66072714, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_8', 'type': 'pdf', 'content': 'cool and warm the climateThe microphysics responsible for cloud formation is not well understoodThe grid cells in models are much much bigger than time/space scales relevant for cloud physicsÞMagnitude/location of rain events is hard to predict wellÞThat information is useful though!\\nComparing models with data•What is a data point? Observation vs model result•Are model solutions at a point similar toa data point (i.e.observational sample)?–Spatially?–Temporally?•Using data well is not a trivial ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 8}}, {'id': 1753902702944729, 'score': 0.6603198, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_9', 'type': 'pdf', 'content': 'task. It requires understanding the model well and the data well–A trend towards “Observational System Simulation Experiments” (OSSE)–data assimilation (e.g.4DVAR)\\nThe role of observationsin modeling\\nhttp://www.climate.be/textbook/pdf/Chapter_3.pdf\\nModelsvs observations•There are data that are ’just’ observations•There are models that are ‘just’ models•There are models that are ‘assimilated with data’–Often called ‘Reanalysis Products’•(also used in weather forecasting, obviously)–These are mode', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 9}}, {'id': 1753902300429530, 'score': 0.6556171, 'payload': {'original_id': 'uploads\\\\02v1_Building_climate_models_copy.pdf_chunk_6', 'type': 'pdf', 'content': 'ce scales of interest–Integration time step–Spatial resolution of the grid–Duration of model run–Decisions about time/space scales also translate into “filtering” the equations •(parts of the equations can be neglected and the equations simplified –some physics can be neglected/simplified)\\nWhy model climate?\\n\\nWeather and climate –bridging the gap\\n\\n\\nWhat are coupledclimatemodels?\\n\\nA few key major coupling mechanisms between the ocean and the atmosphere\\nThe “coupler” is the heart of climate models', 'source_document': 'uploads\\\\02v1_Building_climate_models_copy.pdf', 'chunk_number': 6}}]",
      "[{'id': 1753903424143550, 'score': 0.6914271, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_11_md', 'type': 'markdown', 'content': \"<a id='NetCDF'></a>\\n\\n## Network Common Data Form (NetCDF)\\n\\n[NetCDF](https://www.unidata.ucar.edu/software/netcdf/) is one of the most common data format used to store climate data. NetCDF files allow the user to insert metadata in the data file by design, ensuring the data file is self-describing (amongst other properties).\\n\\n*NetCDF is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data.* \\n\\nThe netCDF format, which is a type of HDF format, is attractive because it is:\\n\\n* Self-Describing. A netCDF file includes information about the data it contains and metadata.\\n* Portable. A netCDF file can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.\\n* Scalable. Small subsets of large datasets in various formats may be accessed efficiently through netCDF interfaces, even from remote servers.\\n* Appendable. Data may be appended to a properly structured netCDF file without copying the dataset or redefining its structure.\\n* Sharable. One writer and multiple readers may simultaneously access the same netCDF file.\\n* Archivable. Access to all earlier forms of netCDF data will be supported by current and future versions of the software.\\n\\n\\nThe NetCDF project is maintained by the Unidata program at the University Corporation for Atmospheric Research ([UCAR](https://www.ucar.edu)). [UCAR](https://www.ucar.edu) also manages [NCAR](https://ncar.ucar.edu), one of the first center to have developped climate models and is today one of the gold-standard on the topic. \\n\\nNCAR also developed [NCL](https://www.ncl.ucar.edu), an interpreted programming language designed specifically for scientific data analysis and visualization (we will not use NCL here, but the python package `ESMValTool` has build-in support for it). \\n\\n[NCAR](https://ncar.ucar.edu) has also developped the [climate data guide](https://climatedataguide.ucar.edu), a tool to search and access >200 data sets specific to the ocean, land and the atmosphere. (Some of these data may or may not also be found on CEDA.) \\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 11}}, {'id': 1753903424509295, 'score': 0.6866766, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_1_md', 'type': 'markdown', 'content': \"---\\n\\n# 01- Introduction to climate data and climate models\\n\\n---\\n\\n<a id='Contents'></a>\\n## Contents\\n- [Lectures](#lectures)\\n- [Question](#question)\\n- [ESMValTool](#ESMValTool)\\n- [Sources of climate data](#climatedata)\\n- [CEDA](#CEDA)\\n- [File formats](#fileformat)\\n- [Metadata](#metadata)\\n- [NetCDF](#NetCDF)\\n- [NCO](#NCO)\\n- [Reanalysis products](#reanalysis)\\n- [Climate services UKCP18](#ukcp18)\\n  \\n## Learning outcomes\\n1. Understand the basics of climate modelling\\n2. Know where to find and how to access climate data (ESGF, CEDA)\\n3. Understand common file formats\\n4. Understand the importance of metadata and understand CF conventions\\n5. Understand the NetCDF file format and know how to read, create and maniputate NetCDF data\\n6. Become familiar with other key tools used to manipulate netCDF data (NCO, CDO)\\n7. Know how to access ERA5 reanalysis products\\n8. Climate Services and UKCP18 and ability to access that data\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 1}}, {'id': 1753903424959234, 'score': 0.6796366, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_9_md', 'type': 'markdown', 'content': '<a id=\\'Metadata\\'></a>\\n\\n## The importance of Metadata\\n[Metadata](https://help.ceda.ac.uk/article/4428-metadata-basics) **relate to all the information necessary to interpret, understand and use a given dataset. Metadata are not the data themselves, but are required to provide context and therefore inform the data analysis.** \\n\\nThere are two types of metadata, \"**discover metadata**\", which can be used to locate the dataset in a search, and \"**detailed metadata**\", which contain the information necessary to use the data (ideally) without having to ask the data provider for more information (even if one of the key piece of information should be the data provider information and contact detail!).\\n\\nThere is no upper limit as to what information should be included in the metadata, but typical metadata comprise information about when and where the observations, or the file, where produced, how they were produced (which instrument, technique, algorithm were used), information about the experiment the data come from, maybe some information about data accuracy (if not provided as seperate data in the file), information about who produced the data or the file, including contact information, or appropriate reference(s), and, if relevant, additional information about the research context, i.e. which project is associated with these data (this could help the user understand if more data from this group/project exist or can be expected). If the data represent a subset of a larger dataset, this should also be mentioned. \\n\\nAnother key pieces of information that the metadata should provide are a description of the variables in the file, with variable **names**, and the **units** of these variables. \\n\\nIf the data in the file represent a processed version of other raw data, then one should add information about these raw data as well, their provenance, references, and the transformation that was made, etc. One should be able to track the chain of information all the way to the orginal observations (or model output). \\n\\nIf the data represent gridded variables, then the nature of the grid on which these data are defined should also be explained. \\n\\nSimilarly, if the position, or some other features of the data, depend on a reference system, that reference system should be given. This will be discussed in more depth during the introduction to geostatistics lecture. \\n\\nIn the case of climate models (or other models, if relevant), the metadata should also include information about the model itself, the model name, version, the length of the integration, maybe a brief description of the spin-up, boundary conditions, initial conditions used to produce the simulation. \\n\\nObviously the information that will be included in the metadata vary substantially. You should learn (and will discover - mostly through shear frustration when key information is missing!) what constitute useful metadata in your field of work. \\n\\nMetadata can be included in the file itself (if the file format allows it), as separate files, or in the form of some other documents. When sourcing data, always make a note of where the data come from. This is especially true if getting data online as it is very easy to download data and then forget where they come from. Detailed note-taking is part of the job of the data analyst (and that of any scientist!). \\n\\nWhen metadata is included in the file directly, this typically comes as a header, or in a specified location in the file. The netCDF format has rules for how/where to include metadata, which is one of the reason why netCDF data are particularly useful and popular in climate science. \\n\\n\\n[back to contents](#Contents)\\n\\n---', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 9}}, {'id': 1753903424243022, 'score': 0.67617834, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_10_md', 'type': 'markdown', 'content': \" * ### The Climate and Forecast (CF) Metadata Conventions (prominent in climate science)\\n \\nGiven the amount of data produced keeps increasing, data libraries are being developed. As in any library, certain sets of rules are required so that the data can be found later. Metadata are obviously a good way to ensure data can be catalogued and found by various search systems.\\n\\nMultiple types of conventions exist (see for example this [list of netCDF conventions from Unidata](https://www.unidata.ucar.edu/software/netcdf/conventions.html)). Ensuring that data files are produced in a way that follows conventions about content, vocabulary used and layout, allows for batch processing, easy extraction and automation! It is extremely useful (but should not prevent innovation).\\n\\nCEDA, as it focuses on climate and environmental data, relies extensively on the [Climate and Forecast (CF) Conventions](http://cfconventions.org). The CF Conventions are probably the most popular in climate science (it underpins the modelling effort of the IPCC). A detailed description of the latest release of the CF Conventions for netCDF can be found [here](http://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html). \\n\\nThe CF Conventions were designed specifically for the netCDF format but they can be applied widely. The netCDF format enables creation of self-describing datasets by design. CF Conventions aim to ensure that  files contain sufficient metadata that they are self-describing in the sense that each variable in the file has an associated description of what it represents, including physical units if appropriate, and that each value can be located in space (relative to earth-based coordinates) and time. (Absence of such information in early (historical) datasets has hindered climate change science for decades - how does one measure change, if one cannot locate the observations in time and space?)\\n\\nOne example of CF Conventions is to provide a list of **standard_names** for certain commonly-used variables. The [CF standard name table] (http://cfconventions.org/Data/cf-standard-names/current/build/cf-standard-name-table.html) will show what the names are and describe what they represent. \\n\\nTo illustrate, imagine you work with data at the earth surface and label your variable 'temperature'. What did you mean exactly? Surface temperature of the ocean/land, or air temperature? etc. CF conventions ensure that climate scientists name common variables in the same way. \\n\\nA [python package](https://pypi.org/project/cfunits/) called `cfunits` provides an interface to the CF Convention. This is useful to combine and compare variables and convert various units. By relying on a package, fewer user-errors are made.   \\n\\nThe CF Conventions are not fixed, they are evolving depending on needs and scientific progress. Although conventions are decided by a committee of experts, anyone can propose a change to the convention by engaging in the [discussion forum](https://cfconventions.org/discussion.html).\\n\\n\\n[back to contents](#Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 10}}, {'id': 1753903424142956, 'score': 0.6741627, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_4_md', 'type': 'markdown', 'content': \"<a id='ESMValTool'></a>\\n\\n# Python environments to consider for working with climate data \\n\\n* ## Earth System Model Evaluation Tool (ESMValTool)\\n![esmvaltool](img/ESMValTool-logo-2.png)\\n\\nThis week, it should be possible to simply install packages as needed...\\n\\nHowever, if you anticipate possible future needs, you may want to invest a bit of effort to setup a specific python environment to work with climate data. If so, a good place to start is the `ESMValTool` project. \\n\\n\\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) is  a community-led, open source, set of software tools (build on python 3) developed to improve diagnosing and understanding climate models. While the focus has been on climate models, not observations, one cannot quantify model biases without also comparing the model results with observations. [ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) therefore also has some capability to analyze and manipulate large datasets. \\n\\n[ESMValTool](https://docs.esmvaltool.org/projects/esmvalcore/en/latest/index.html) can work offline, but as the amount of climate data is so large, it is mostly designed to work with data centers that provide local access to the vast amount of data. One such initiative is the Earth System Grid Federation ([ESGF](https://esgf.llnl.gov)). ESMValTool provides functionality to work on HPC systems.\\n\\nWe will not use ESMValTool here specifically, but it will install other convenient tools and you may be curious to investigate ESMValTool capabilities on your own anyways. It is now used routinely for climate modelling research. \\n\\nAdditional information and help can be found at https://www.esmvaltoolorg, and on the [ESMValGroup](https://github.com/ESMValGroup) github page. The [ESMValTool tutorial](https://esmvalgroup.github.io/ESMValTool_Tutorial/) is a great resource to get started. \\n\\n\\n### OPTIONAL: Installing ESMValTool (NB: this often fails for students - installing this is not required for the course)\\n[Installation instructions](https://docs.esmvaltool.org/en/latest/quickstart/installation.html) differ by operating system and it is very much an experimental, in development, tool - keep this in mind! \\n\\n[Notes:ESMValTool 2.0 requires a Unix(-like) operating system and Python 3.7+. (Python 3.7, 3.8 and 3.9 are supported). On my laptop (Macbook pro 13'' M1 2020 with OS Monterey 12.0.1), I installed it in Nov 2021 with Python 3.9.7. ...but I installed it when 'conda' was still an installation option. ESMValTool developer have  changed installation methods to `mamba` recently. Do refer to online/official instructions). You will now be required to also [install `mamba`](https://docs.esmvaltool.org/en/latest/quickstart/installation.html#mamba-installation) first (...yet another package/dependency manager).] \\n\\nESMValTool can also work with Julia, R, NCL. Do check installation instructions for these extensions. \\n\\n[back to contents](##Contents)\\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 4}}, {'id': 1753901957112878, 'score': 0.6701191, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_0', 'type': 'pdf', 'content': 'https://svs.gsfc.nasa.gov/30701Climate data and modelsEDSML MSc –Imperial College London –Environmental dataYves Plancherel-https://www.linkedin.com/in/yves-plancherel/\\nWhy discuss climate data and climate models?\\n1. Understand common data format and databasestructures specific to representative fields of environmental science2. Demonstrate technical competency in handling common data types routinely encountered in the environmental sciences and identify relevant open-source data repositories3. ', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 0}}, {'id': 1753902702944729, 'score': 0.668877, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_9', 'type': 'pdf', 'content': 'task. It requires understanding the model well and the data well–A trend towards “Observational System Simulation Experiments” (OSSE)–data assimilation (e.g.4DVAR)\\nThe role of observationsin modeling\\nhttp://www.climate.be/textbook/pdf/Chapter_3.pdf\\nModelsvs observations•There are data that are ’just’ observations•There are models that are ‘just’ models•There are models that are ‘assimilated with data’–Often called ‘Reanalysis Products’•(also used in weather forecasting, obviously)–These are mode', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 9}}, {'id': 1753901956917450, 'score': 0.66339946, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_3', 'type': 'pdf', 'content': ' technology options)\\n\\nUsing climate models: variability(temporal, spatial)\\nImportance of experimental design!Control+ experiment\\nUsing climate models: uncertainties and sensitivities\\nMIP = Model Intercomparison Project\\nEyring et al. 2016\\nUsing climate models: uncertainties and sensitivities\\nhttps://en.wikipedia.org/wiki/Climate_ensembleDifferent experimentswith many ensembles!Each one trying to account for sensitivity due to a source of error Real world data: we only have one Earth, ONE realizat', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 3}}, {'id': 1753903424262111, 'score': 0.6598469, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_38_md', 'type': 'markdown', 'content': \"<a id='reanalysis'></a>\\n\\n# Reanalysis products\\n\\n![C3S](img/c3s-logo.png)\\n![ECMWF](img/logo-ecmwf.png) \\n\\n[*ERA5 provides hourly estimates of a large number of atmospheric, land and oceanic climate variables. The data cover the Earth on a 30km grid and resolve the atmosphere using 137 levels from the surface up to a height of 80km. ERA5 includes information about uncertainties for all variables at reduced spatial and temporal resolutions.Quality-assured monthly updates of ERA5 (1979 to present) are published within 3 months of real time. Preliminary daily updates of the dataset are available to users within 5 days of real time.*](https://www.ecmwf.int/en/forecasts/datasets/reanalysis-datasets/era5)\\n\\n[ERA5](https://confluence.ecmwf.int/display/CKB/ERA5) is a [family of datasets](https://confluence.ecmwf.int/display/CKB/The+family+of+ERA5+datasets). It currently comprises ERA5, ERA5.1 and ERA5-Land. ERA5 is the fifth generation ECMWF atmospheric reanalysis of the global climate covering the period from January 1950 to present. ERA5 is produced by the Copernicus Climate Change Service ([C3S](https://confluence.ecmwf.int/pages/viewpage.action?pageId=151530614)) at the European Center for Medium-Range Weather Forecasts ([ECMWF](https://www.ecmwf.int)) and made available via the [Climate Change Service](https://climate.copernicus.eu). \\n\\nImportantly, ERA5 is a [**reanalysis product**](https://www.youtube.com/watch?v=FAGobvUGl24), meaning a **model that assimilates data**. A model of the climate (weather) is run, and adjusted (following certain laws of physics and constraints) to fit [as many observations](https://confluence.ecmwf.int/display/CKB/ERA5%3A+data+documentation#ERA5:datadocumentation-Observations) as possible using a technique called 4D-var. One must realize that, even if assimimated prodcuts such as ERA5 are often used 'in lieu' of observations, they are **\\\\*not\\\\*** observations: they are a model product, but a product that is made to look as much like the data as possible given computational, mathematical, physical limitations of the model. \\n\\nERA5 is one of various [reanalysis products](https://reanalyses.org) available globally. Another well-known produce is the [NCEP/NCAR Reanalysis product](https://en.wikipedia.org/wiki/NCEP/NCAR_Reanalysis). [MERRA-2](https://gmao.gsfc.nasa.gov/reanalysis/MERRA-2/), produced by NASA, is another. \\n\\nThe article by [Hersbach et al. 2020](https://rmets.onlinelibrary.wiley.com/doi/10.1002/qj.3803) discusses the ERA global Reanalysis prodcuct in more detail.\\n\\nWhile observations are only available in specific locations and at specific times, the reanalysis product provides a clever way to dynamically interpolate between these observations. ERA5 also comes as a gridded product, making it very convenient to use. In the model-world, one can access a complete/global picture every time-step, with a spatial resolution as high as computational limits allow. I re-emphasize that this is not the same as observations! ... but it is as close to observations as we can get if one is trying to work with a spatially and temporall interpolated product. \\n\\n**Grid geometry depends on data format**: Note that the grid geometry of the output data of ERA5 [depends on the format the data that are being downloaded](https://confluence.ecmwf.int/display/CKB/ERA5%3A+What+is+the+spatial+reference). Native GRIB format data are delivered on the model's native grid geometry (this is not a regular lat/lon grid!). On the other hand, data in NetCDF format are automatically interpolated and regridded to a regular lat/lon grid. While this is not very important for most application, one must remember that interpolated data in the NetCDF files are not the same as the original model output and this could have implication for the conservation properties of some variables. It can be easier/convenient to work with data interpolated on a regular lat/lon grid, however.  \\n\\n**Grid definition and wrap-around**: The gridded ERA5 archive is provided on a [-90;+90] latitude grid and a [0;+360] longitude grid, with decimal degrees, referenced to the Greenwich Prime Meridian. While latitude is generally not an issue, care must be taken when working with longitude as one must remember that 0 and 360 are the same point. One must account for the wrap-around issue: although the first column and last column of a datasets on the [0;+360] grid are far away from each other in terms of index, these points are geographically very close. Some software can automatically deal with this wrap-around and convert to [-180;+180] or other system as required, but this should not be taken for granted. \\n\\n\\n[back to contents](#Contents)\\n\\n---\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 38}}, {'id': 1753902702662417, 'score': 0.65918136, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_10', 'type': 'pdf', 'content': 'ls that are ‘fitted’ to data•Some model parameters are tuned to fit–Question is what to fit/how? (Data assimilation, 4DVAR)–Provide best gridded high-resolution spatio-temporal product available … but:•they are still model results–Fitting a bad/wrong model still is a bad results•they only exist for the period when data exist–so cannot be used for forecasting–But extremely useful to understand past/current climate patterns/variability\\nAre models ever “right”?•Since models are incomplete by constr', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 10}}, {'id': 1753905537095676, 'score': 0.6548091, 'payload': {'original_id': 'uploads\\\\intro_to_timeseriesanalysis.ipynb_cell_1_md', 'type': 'markdown', 'content': \"<a id='timeseries'></a>\\n## Data with a time dimension\\n\\nEnvironmental scientists frequently need to analyse measurements that form a `sequence` - an ordered series. This series may be ordered in space (e.g. down a stratigraphic section) or in time (e.g. over the past 100 years). In either case, these are known as `time series`, and the term `time-series analysis` is used to describe the application of quantitative methods to discover patterns in the data. \\n\\nThe series variable can be defined either by a rank-order or by a quantitative measure of position along the series axis (time or space). To illustrate this, consider a tree rings.  A rank-order series is defined by the order that the rings appear, from inside to outside: first, second, third, ..., last.  A quantitative sequence measure, on the other hand, can be defined if each ring is dated, with ages: $t_1$, $t_2$, $t_3$, ..., $t_N$. (For tree rings, this is easy as one ring = one year.)\\n\\nA time-series consists of an observation at each entry in the rank-order or measured-time list.  This measurement can also be qualitative or quantitative.  As an example of the former, we might have a record of the presence or absence of a certain fossil-type in each layer of the stratigraphic sequence. The latter type of time-series, composed of quantitative observations, might be the height of water in a lake, the lateral displacement of a GPS station, or, in the case of tree rings, maybe the mass-fraction of a pollutant in the wood.\\n\\n[Time series](https://en.wikipedia.org/wiki/Time_series) data can be equally spaced or not, but if not, then extra care must be taken to analyze them. Time-series refer to sequence of discrete in time data. This also means that the points have a relationship with one-another, i.e some points cannot exist before, or after other points. That organization, containted in the order, can be exploited to learn more about real-world processes. \\n\\nData where time (or rank order, or sequential order) doesn't matter are sometimes called `cross sectional data`. These are sets of data observed at a single time, or where time has no meaning. \\n\\nTypically, time series data have the following form: \\n1. a time or index variable, or (when unlucky), multiple columns that have to be combined to create a meaningful time variable (this is often the case, when year, month, day, time, etc. are in different columns)\\n2. other columns of data with measurements/values of interest.\\n\\nNote that datasets can of course also contain [both cross-sectional and time series](https://www.youtube.com/watch?v=FsroWpkUuYI) information, in which case analysis can be performed for each time step, and across time steps, yielding for very rich analysis. For example, we could have data that measure the temporal evolution of some environmental variables in various locations. One could therefore compare locations spatially, at each time point, look at the evolution of the data at each station, and also do both. That is, time series analysis may not necessarily only concern 1D datasets, but also 2D, 3D, or ND datasets. \\n\\nIn general, we will consider time-series composed of $N$ entries indexed by an integer $i$ that goes from 1 to $N$.  For each value of $i$ we will have a measure of the position (e.g.~time), $t_i$, and a measure of some quantity at that time, $q_i$.  Hence a general time-series can be represented as\\n$\\n  t_1,\\\\, t_2,\\\\, t_3,\\\\,...,\\\\,t_{N-1},\\\\,t_N; \\\\\\\\\\n  q_1,\\\\, q_2,\\\\, q_3,\\\\,...,\\\\,q_{N-1},\\\\,q_N.\\n$\\n\\nA primary consideration in analysing a time-series is whether its entries are `regularly spaced`.  Regular spacing means that there is a constant difference between $t_{i+1}$ and $t_i$:\\n\\n$\\n  t_{i+1} - t_i = \\\\Delta t\\\\text{, const. for all }i.\\n$\\n\\nThe spacing between successive measurements, $\\\\Delta t$, could be a microsecond, or a metre, or a million years; the important point is that the same spacing applies to any pair of consecutive entries in the series.\\n\\nIf $\\\\Delta t$ is not constant, then interpolation methods can be used to interpolate the original data onto a constant grid, with constant spacing. \\n\\nThere are many ways to interpolate data, but not one best way. It is up to the analyst to pick the 'best' way and this will depend on the data distribution, data type, and on the research objectives. It is hard to know a-priori what works best for a given case and the analyst will need to check that her/his choice will not critically affect the conclusion of the study. \\n\\n`Linear interpolation` is often an excellent first choice. It is simple and fast. However, because it relies on simply interpolating [between neighboring points using strait line segments](https://pythonnumericalmethods.berkeley.edu/notebooks/chapter17.02-Linear-Interpolation.html), the interpolated product could be 'jagged'. Depending on the smoothness of the true process sampled by the time series, `higher-order polynomials` or `splines` could be used, or, as discuss later, a `loess/lowess` fit. \\n\\nPython provides many functions for **interpolation**, for instance from `scipy.interpolate`, such as [`interp1d`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.interp1d.html), [`interp2d`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.interp2d.html#scipy.interpolate.interp2d) for 2D grids for linear and bilinear interpolation, or [`UnivariateSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.UnivariateSpline.html#scipy.interpolate.UnivariateSpline) or [`BivariateSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.BivariateSpline.html#scipy.interpolate.BivariateSpline) for smoother options. There are many others. \\n\", 'source_document': 'uploads\\\\intro_to_timeseriesanalysis.ipynb', 'cell_number': 1}}, {'id': 1753907767547004, 'score': 0.6548091, 'payload': {'original_id': 'uploads\\\\intro_to_timeseriesanalysis-IC-X9CYXD36RX.ipynb_cell_1_md', 'type': 'markdown', 'content': \"<a id='timeseries'></a>\\n## Data with a time dimension\\n\\nEnvironmental scientists frequently need to analyse measurements that form a `sequence` - an ordered series. This series may be ordered in space (e.g. down a stratigraphic section) or in time (e.g. over the past 100 years). In either case, these are known as `time series`, and the term `time-series analysis` is used to describe the application of quantitative methods to discover patterns in the data. \\n\\nThe series variable can be defined either by a rank-order or by a quantitative measure of position along the series axis (time or space). To illustrate this, consider a tree rings.  A rank-order series is defined by the order that the rings appear, from inside to outside: first, second, third, ..., last.  A quantitative sequence measure, on the other hand, can be defined if each ring is dated, with ages: $t_1$, $t_2$, $t_3$, ..., $t_N$. (For tree rings, this is easy as one ring = one year.)\\n\\nA time-series consists of an observation at each entry in the rank-order or measured-time list.  This measurement can also be qualitative or quantitative.  As an example of the former, we might have a record of the presence or absence of a certain fossil-type in each layer of the stratigraphic sequence. The latter type of time-series, composed of quantitative observations, might be the height of water in a lake, the lateral displacement of a GPS station, or, in the case of tree rings, maybe the mass-fraction of a pollutant in the wood.\\n\\n[Time series](https://en.wikipedia.org/wiki/Time_series) data can be equally spaced or not, but if not, then extra care must be taken to analyze them. Time-series refer to sequence of discrete in time data. This also means that the points have a relationship with one-another, i.e some points cannot exist before, or after other points. That organization, containted in the order, can be exploited to learn more about real-world processes. \\n\\nData where time (or rank order, or sequential order) doesn't matter are sometimes called `cross sectional data`. These are sets of data observed at a single time, or where time has no meaning. \\n\\nTypically, time series data have the following form: \\n1. a time or index variable, or (when unlucky), multiple columns that have to be combined to create a meaningful time variable (this is often the case, when year, month, day, time, etc. are in different columns)\\n2. other columns of data with measurements/values of interest.\\n\\nNote that datasets can of course also contain [both cross-sectional and time series](https://www.youtube.com/watch?v=FsroWpkUuYI) information, in which case analysis can be performed for each time step, and across time steps, yielding for very rich analysis. For example, we could have data that measure the temporal evolution of some environmental variables in various locations. One could therefore compare locations spatially, at each time point, look at the evolution of the data at each station, and also do both. That is, time series analysis may not necessarily only concern 1D datasets, but also 2D, 3D, or ND datasets. \\n\\nIn general, we will consider time-series composed of $N$ entries indexed by an integer $i$ that goes from 1 to $N$.  For each value of $i$ we will have a measure of the position (e.g.~time), $t_i$, and a measure of some quantity at that time, $q_i$.  Hence a general time-series can be represented as\\n$\\n  t_1,\\\\, t_2,\\\\, t_3,\\\\,...,\\\\,t_{N-1},\\\\,t_N; \\\\\\\\\\n  q_1,\\\\, q_2,\\\\, q_3,\\\\,...,\\\\,q_{N-1},\\\\,q_N.\\n$\\n\\nA primary consideration in analysing a time-series is whether its entries are `regularly spaced`.  Regular spacing means that there is a constant difference between $t_{i+1}$ and $t_i$:\\n\\n$\\n  t_{i+1} - t_i = \\\\Delta t\\\\text{, const. for all }i.\\n$\\n\\nThe spacing between successive measurements, $\\\\Delta t$, could be a microsecond, or a metre, or a million years; the important point is that the same spacing applies to any pair of consecutive entries in the series.\\n\\nIf $\\\\Delta t$ is not constant, then interpolation methods can be used to interpolate the original data onto a constant grid, with constant spacing. \\n\\nThere are many ways to interpolate data, but not one best way. It is up to the analyst to pick the 'best' way and this will depend on the data distribution, data type, and on the research objectives. It is hard to know a-priori what works best for a given case and the analyst will need to check that her/his choice will not critically affect the conclusion of the study. \\n\\n`Linear interpolation` is often an excellent first choice. It is simple and fast. However, because it relies on simply interpolating [between neighboring points using strait line segments](https://pythonnumericalmethods.berkeley.edu/notebooks/chapter17.02-Linear-Interpolation.html), the interpolated product could be 'jagged'. Depending on the smoothness of the true process sampled by the time series, `higher-order polynomials` or `splines` could be used, or, as discuss later, a `loess/lowess` fit. \\n\\nPython provides many functions for **interpolation**, for instance from `scipy.interpolate`, such as [`interp1d`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.interp1d.html), [`interp2d`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.interp2d.html#scipy.interpolate.interp2d) for 2D grids for linear and bilinear interpolation, or [`UnivariateSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.UnivariateSpline.html#scipy.interpolate.UnivariateSpline) or [`BivariateSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.BivariateSpline.html#scipy.interpolate.BivariateSpline) for smoother options. There are many others. \\n\", 'source_document': 'uploads\\\\intro_to_timeseriesanalysis-IC-X9CYXD36RX.ipynb', 'cell_number': 1}}, {'id': 1753903424357433, 'score': 0.6540323, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_5_md', 'type': 'markdown', 'content': \"<a id='climatedata'></a>\\n\\n# Working with climate data and climate models\\n\\n### Earth System Grid Federation (ESGF)\\n\\n![esgf](img/ESGF_logo.png)\\n\\n\\n[ESGF](https://esgf.llnl.gov) is an open-source platform that provides distributed access to peta/exa-scale scientific data, **globally**. \\n\\nIt is an interagency and international effort led by the US Department of Energy (DOE), co-funded by National Aeronautics and Space Administration (NASA), National Oceanic and Atmospheric Administration (NOAA), the US National Science Foundation (NSF), and other international partners, such as the Max Planck Institute for Meteorology (MPI-M) German Climate Computing Centre (DKRZ), the Australian National University (ANU) National Computational Infrastructure (NCI), Institut Pierre-Simon Laplace (IPSL), and the **Centre for Environmental Data Analysis ([CEDA](https://www.ceda.ac.uk))** in the UK.\\n\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 5}}, {'id': 1753903424963171, 'score': 0.65231097, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_33_md', 'type': 'markdown', 'content': '**Masks**: `Masks` are often used in climate science data to separate data from different regions (e.g. ocean vs land, etc.). By default, the python NetCDF4 API returns numpy arrays that mask entries that equal the `missing_value` or `_FillValue` attribute. One can force unmasking (i.e. return all values, regardless) using the `Dataset.set_auto_mask` method. To switch back auto-masking, use `Dataset.set_always_mask`. When writing a masked array to a variable in a netcdf file (i.e. an array with missing data), the masked elements are filled with the value that is defined in the `missing_value` attribute that was defined when creating the netcdf fie. ', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 33}}, {'id': 1753902702794239, 'score': 0.6521268, 'payload': {'original_id': 'uploads\\\\03v1_Common_issues.pdf_chunk_8', 'type': 'pdf', 'content': 'cool and warm the climateThe microphysics responsible for cloud formation is not well understoodThe grid cells in models are much much bigger than time/space scales relevant for cloud physicsÞMagnitude/location of rain events is hard to predict wellÞThat information is useful though!\\nComparing models with data•What is a data point? Observation vs model result•Are model solutions at a point similar toa data point (i.e.observational sample)?–Spatially?–Temporally?•Using data well is not a trivial ', 'source_document': 'uploads\\\\03v1_Common_issues.pdf', 'chunk_number': 8}}, {'id': 1753903424228032, 'score': 0.6505654, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_43_md', 'type': 'markdown', 'content': '### The CDS Toolbox\\n\\nAn extention to the CDS API is the [CDS Toolbox](https://cds.climate.copernicus.eu/toolbox/doc/index.html). The Toolbox is a programming interface. It is free and available to everyone. It links raw data to an online computing facility, thereby removing the computing barrier for users worldwide. The Toolbox allows users to develop python scripts for the CDS and to run them online. The users than then simply download the maps, graph or secondary data without needing to incur the costs associated with storing and maintaining the large climate data archive locally, nor is it required to invest in a powerful computer. \\n\\n\\nThe Toolbox works hand-in-hand with the CDS API. \\n\\nThat is, one can issue commmands to the Toolbox via the CDS API, or develop a python script that does certain things, and then use the CDS API functionality to send it to CDS for evaluation, only to download the finished product locally. \\n\\nExamples of how to proceed are given [here](https://confluence.ecmwf.int/display/COPSRV/Call+a+service+with+the+CDS+API). \\n\\nNote, it is also possible to use the CDS Toolbox to plot data from other services (i.e. not originally stored on CDS), using the `remote` function instead of the `service` function. This is possible thanks to protocols such as OPeNDAP. Here is an example using data from UNIDATA. \\n\\nFor illustration of how the Toolbox can be used, the following piece of code, run locally, after the CDS API is properly configured and assuming one is connected to the internet, will produce, and then download to our `output/` directory, a map of global temperature on January 1st 2021 at 14:00.', 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 43}}, {'id': 1753902300429530, 'score': 0.64758956, 'payload': {'original_id': 'uploads\\\\02v1_Building_climate_models_copy.pdf_chunk_6', 'type': 'pdf', 'content': 'ce scales of interest–Integration time step–Spatial resolution of the grid–Duration of model run–Decisions about time/space scales also translate into “filtering” the equations •(parts of the equations can be neglected and the equations simplified –some physics can be neglected/simplified)\\nWhy model climate?\\n\\nWeather and climate –bridging the gap\\n\\n\\nWhat are coupledclimatemodels?\\n\\nA few key major coupling mechanisms between the ocean and the atmosphere\\nThe “coupler” is the heart of climate models', 'source_document': 'uploads\\\\02v1_Building_climate_models_copy.pdf', 'chunk_number': 6}}, {'id': 1753903424368210, 'score': 0.64681864, 'payload': {'original_id': 'uploads\\\\intro_to_climatedata.ipynb_cell_2_md', 'type': 'markdown', 'content': \"<a id='lectures'></a>\\n# Lecture on relevance of climate science, climate models and climate modelling\\n\\n\\n(see Powerpoint presentations)\\n\\n1. 01v1_Why_climate_data.pptx/pdf\\n2. 02v1_Building_climate_models.pptx/pdf\\n3. 03v1_Common_issues.pptx/pdf\\n   \\n\\n---\", 'source_document': 'uploads\\\\intro_to_climatedata.ipynb', 'cell_number': 2}}, {'id': 1753901956989969, 'score': 0.6455458, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_2', 'type': 'pdf', 'content': ' as well as errors stemming from the analytical procedure itself (e.g.calibration of analysis using synthetic data/models).Learning objectives of the Environmental Data module•Growing/important field –with likely career opportunities•Great playground to deliver learning objectives\\nUsing climate models: quantification/forecasting(impacts, adaptation, mitigation)\\nhttps://www.noaa.gov/education/resource-collections/climate/climate-change-impacts\\nUsing climate models: designscenarios(explore policy,', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 2}}, {'id': 1753901956993712, 'score': 0.6411147, 'payload': {'original_id': 'uploads\\\\01v1_Why_climate_data.pdf_chunk_4', 'type': 'pdf', 'content': 'ionModel data: we do what the @#$ we want J!•…as long aswe can calculate it and analyze it•… and are aware of model flaws!\\nUsing climate models: attributionhttps://www.worldweatherattribution.org\\nhttps://www.swissre.com/media/news-releases/nr-20191219-global-catastrophes-estimate.htmlWhose faultis it?Who pays for it?Catastrophe-related insured losses (1970-2019)\\n\\nClimate extremes and climate risk•Magnitude•Frequency•Duration•Spatial extent•Whatvariable?–T, Precipitation, winds, sea level, etc.•H', 'source_document': 'uploads\\\\01v1_Why_climate_data.pdf', 'chunk_number': 4}}]"
    ],
    "response": "CANNOT_FIND",
    "reference": "Climate data is crucial because it supports understanding environmental dynamics, evaluating the effects of climate change, and informs policy, adaptation, and mitigation strategies."
  }
]